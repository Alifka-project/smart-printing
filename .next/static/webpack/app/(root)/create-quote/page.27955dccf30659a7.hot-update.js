/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(root)/create-quote/page",{

/***/ "(app-pages-browser)/./app/(root)/create-quote/page.tsx":
/*!******************************************!*\
  !*** ./app/(root)/create-quote/page.tsx ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CreateQuotePage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_ui_card__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/ui/card */ \"(app-pages-browser)/./components/ui/card.tsx\");\n/* harmony import */ var _components_ui_button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/ui/button */ \"(app-pages-browser)/./components/ui/button.tsx\");\n/* harmony import */ var _barrel_optimize_names_Copy_FileText_Plus_Save_Sparkles_lucide_react__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! __barrel_optimize__?names=Copy,FileText,Plus,Save,Sparkles!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/sparkles.js\");\n/* harmony import */ var _barrel_optimize_names_Copy_FileText_Plus_Save_Sparkles_lucide_react__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! __barrel_optimize__?names=Copy,FileText,Plus,Save,Sparkles!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/plus.js\");\n/* harmony import */ var _barrel_optimize_names_Copy_FileText_Plus_Save_Sparkles_lucide_react__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! __barrel_optimize__?names=Copy,FileText,Plus,Save,Sparkles!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/copy.js\");\n/* harmony import */ var _barrel_optimize_names_Copy_FileText_Plus_Save_Sparkles_lucide_react__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! __barrel_optimize__?names=Copy,FileText,Plus,Save,Sparkles!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/file-text.js\");\n/* harmony import */ var _barrel_optimize_names_Copy_FileText_Plus_Save_Sparkles_lucide_react__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! __barrel_optimize__?names=Copy,FileText,Plus,Save,Sparkles!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/save.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/link */ \"(app-pages-browser)/./node_modules/next/dist/client/app-dir/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _components_create_quote_StepIndicator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/create-quote/StepIndicator */ \"(app-pages-browser)/./components/create-quote/StepIndicator.tsx\");\n/* harmony import */ var _components_create_quote_steps_Step2CustomerChoose__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/components/create-quote/steps/Step2CustomerChoose */ \"(app-pages-browser)/./components/create-quote/steps/Step2CustomerChoose.tsx\");\n/* harmony import */ var _components_create_quote_steps_Step2CustomerDetail__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/components/create-quote/steps/Step2CustomerDetail */ \"(app-pages-browser)/./components/create-quote/steps/Step2CustomerDetail.tsx\");\n/* harmony import */ var _components_create_quote_steps_Step3ProductSpec__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/components/create-quote/steps/Step3ProductSpec */ \"(app-pages-browser)/./components/create-quote/steps/Step3ProductSpec.tsx\");\n/* harmony import */ var _components_create_quote_steps_Step4Operational__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/components/create-quote/steps/Step4Operational */ \"(app-pages-browser)/./components/create-quote/steps/Step4Operational.tsx\");\n/* harmony import */ var _components_create_quote_steps_Step4Operational__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_components_create_quote_steps_Step4Operational__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _components_create_quote_steps_Step5Quotation__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @/components/create-quote/steps/Step5Quotation */ \"(app-pages-browser)/./components/create-quote/steps/Step5Quotation.tsx\");\n/* harmony import */ var _lib_quote_pdf__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @/lib/quote-pdf */ \"(app-pages-browser)/./lib/quote-pdf.ts\");\n/* harmony import */ var _lib_dummy_data__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @/lib/dummy-data */ \"(app-pages-browser)/./lib/dummy-data.ts\");\n/* harmony import */ var _lib_detail_to_form__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @/lib/detail-to-form */ \"(app-pages-browser)/./lib/detail-to-form.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst EMPTY_CLIENT = {\n    clientType: \"Individual\",\n    companyName: \"\",\n    contactPerson: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    countryCode: \"+971\",\n    role: \"\",\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    postalCode: \"\",\n    country: \"Dubai\",\n    additionalInfo: \"\"\n};\n// Create a separate component that uses useSearchParams\nfunction CreateQuoteContent() {\n    _s();\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_5__.useRouter)();\n    const searchParams = (0,next_navigation__WEBPACK_IMPORTED_MODULE_5__.useSearchParams)();\n    const [currentStep, setCurrentStep] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1);\n    const [quoteMode, setQuoteMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [saveModalOpen, setSaveModalOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isSaving, setIsSaving] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [requiresApproval, setRequiresApproval] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [approvalReason, setApprovalReason] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [selectedCustomer, setSelectedCustomer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [selectedQuoteId, setSelectedQuoteId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [customerSearch, setCustomerSearch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [showCustomerList, setShowCustomerList] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [formData, setFormData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        client: {\n            ...EMPTY_CLIENT\n        },\n        products: [],\n        operational: {\n            papers: [],\n            finishing: [],\n            plates: null,\n            units: null,\n            impressions: null\n        },\n        calculation: {\n            basePrice: 0,\n            marginAmount: 0,\n            marginPercentage: 30,\n            subtotal: 0,\n            finalSubtotal: 0,\n            vatAmount: 0,\n            totalPrice: 0\n        }\n    });\n    // ===== NEW: state untuk Other Quantities di parent\n    const mainProduct = formData.products[0];\n    const [otherQuantities, setOtherQuantities] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CreateQuoteContent.useEffect\": ()=>{\n            setOtherQuantities({\n                \"CreateQuoteContent.useEffect\": (prev)=>{\n                    var _mainProduct_productName;\n                    return prev.length === 0 ? prev : [\n                        {\n                            ...prev[0],\n                            productName: (_mainProduct_productName = mainProduct === null || mainProduct === void 0 ? void 0 : mainProduct.productName) !== null && _mainProduct_productName !== void 0 ? _mainProduct_productName : prev[0].productName\n                        },\n                        ...prev.slice(1)\n                    ];\n                }\n            }[\"CreateQuoteContent.useEffect\"]);\n        }\n    }[\"CreateQuoteContent.useEffect\"], [\n        mainProduct === null || mainProduct === void 0 ? void 0 : mainProduct.productName\n    ]);\n    // Monitor form data changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CreateQuoteContent.useEffect\": ()=>{\n            console.log('Parent: Form data updated:', formData);\n            console.log('Parent: Client data:', formData.client);\n            console.log('Parent: Client firstName:', formData.client.firstName);\n            console.log('Parent: Client lastName:', formData.client.lastName);\n            console.log('Parent: Client contactPerson:', formData.client.contactPerson);\n        }\n    }[\"CreateQuoteContent.useEffect\"], [\n        formData\n    ]);\n    // Handle URL parameters for step and edit mode\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CreateQuoteContent.useEffect\": ()=>{\n            const stepParam = searchParams.get('step');\n            const editParam = searchParams.get('edit');\n            if (stepParam) {\n                const stepNumber = parseInt(stepParam);\n                if (stepNumber >= 1 && stepNumber <= 5) {\n                    setCurrentStep(stepNumber);\n                }\n            }\n            if (editParam) {\n                setQuoteMode(\"existing\");\n                setSelectedQuoteId(null); // Will be set when a specific quote is selected\n            // You can load existing quote data here if needed\n            }\n        }\n    }[\"CreateQuoteContent.useEffect\"], [\n        searchParams\n    ]);\n    // Memoize the products finishing check to prevent unnecessary re-renders\n    const productsFinishingCheck = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CreateQuoteContent.useMemo[productsFinishingCheck]\": ()=>{\n            return formData.products.map({\n                \"CreateQuoteContent.useMemo[productsFinishingCheck]\": (product)=>({\n                        productName: product.productName,\n                        finishing: product.finishing\n                    })\n            }[\"CreateQuoteContent.useMemo[productsFinishingCheck]\"]);\n        }\n    }[\"CreateQuoteContent.useMemo[productsFinishingCheck]\"], [\n        formData.products\n    ]);\n    // NEW: Synchronize operational finishing when product finishing changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CreateQuoteContent.useEffect\": ()=>{\n            // Get all unique finishing names from all products\n            const allFinishingNames = new Set();\n            // Safety check: ensure formData.products exists and is valid\n            if (!formData.products || !Array.isArray(formData.products) || formData.products.length === 0) {\n                console.log('🔄 Finishing synchronization skipped: no products available');\n                return;\n            }\n            formData.products.forEach({\n                \"CreateQuoteContent.useEffect\": (product)=>{\n                    if (product.finishing && Array.isArray(product.finishing)) {\n                        // Filter out any undefined or null values\n                        const validFinishing = product.finishing.filter({\n                            \"CreateQuoteContent.useEffect.validFinishing\": (f)=>f != null && f !== undefined\n                        }[\"CreateQuoteContent.useEffect.validFinishing\"]);\n                        validFinishing.forEach({\n                            \"CreateQuoteContent.useEffect\": (finishing)=>{\n                                // Handle both simple strings and \"option-side\" format\n                                if (typeof finishing === 'string') {\n                                    const baseName = finishing.includes('-') ? finishing.split('-')[0] : finishing;\n                                    allFinishingNames.add(baseName);\n                                }\n                            }\n                        }[\"CreateQuoteContent.useEffect\"]);\n                    }\n                }\n            }[\"CreateQuoteContent.useEffect\"]);\n            console.log('🔄 Finishing synchronization triggered:', {\n                productFinishing: formData.products.map({\n                    \"CreateQuoteContent.useEffect\": (p)=>p.finishing\n                }[\"CreateQuoteContent.useEffect\"]),\n                allFinishingNames: Array.from(allFinishingNames),\n                currentOperationalFinishing: formData.operational.finishing\n            });\n            // Update operational finishing to include all selected finishing options\n            setFormData({\n                \"CreateQuoteContent.useEffect\": (prev)=>{\n                    const currentOperationalFinishing = prev.operational.finishing || [];\n                    const newOperationalFinishing = [\n                        ...currentOperationalFinishing\n                    ];\n                    // Add new finishing options that don't exist yet\n                    allFinishingNames.forEach({\n                        \"CreateQuoteContent.useEffect\": (finishingName)=>{\n                            const existingFinishing = currentOperationalFinishing.find({\n                                \"CreateQuoteContent.useEffect.existingFinishing\": (f)=>f.name === finishingName\n                            }[\"CreateQuoteContent.useEffect.existingFinishing\"]);\n                            if (!existingFinishing) {\n                                // Add with default cost\n                                newOperationalFinishing.push({\n                                    name: finishingName,\n                                    cost: 0 // Default cost, user can edit in step 4\n                                });\n                            }\n                        }\n                    }[\"CreateQuoteContent.useEffect\"]);\n                    // Remove finishing options that are no longer selected by any product\n                    const filteredFinishing = newOperationalFinishing.filter({\n                        \"CreateQuoteContent.useEffect.filteredFinishing\": (finishing)=>allFinishingNames.has(finishing.name)\n                    }[\"CreateQuoteContent.useEffect.filteredFinishing\"]);\n                    console.log('✅ Updated operational finishing:', filteredFinishing);\n                    return {\n                        ...prev,\n                        operational: {\n                            ...prev.operational,\n                            finishing: filteredFinishing\n                        }\n                    };\n                }\n            }[\"CreateQuoteContent.useEffect\"]);\n        }\n    }[\"CreateQuoteContent.useEffect\"], [\n        formData.products\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CreateQuoteContent.useEffect\": ()=>{\n            var _formData_products_, _formData_additionalCosts;\n            const MARGIN_PERCENTAGE = 0.3;\n            const VAT_PERCENTAGE = 0.05;\n            // 1. Paper Costs (price per sheet × entered sheets)\n            const paperCost = formData.operational.papers.reduce({\n                \"CreateQuoteContent.useEffect.paperCost\": (total, p)=>{\n                    // Manual pricing override: use direct price per sheet if provided, otherwise use packet pricing\n                    const pricePerSheet = p.pricePerSheet || (p.pricePerPacket && p.sheetsPerPacket && p.sheetsPerPacket > 0 ? p.pricePerPacket / p.sheetsPerPacket : 0);\n                    const actualSheetsNeeded = p.enteredSheets || 0;\n                    return total + pricePerSheet * actualSheetsNeeded;\n                }\n            }[\"CreateQuoteContent.useEffect.paperCost\"], 0);\n            // 2. Plates Cost (per plate, typically $25-50 per plate)\n            const PLATE_COST_PER_PLATE = 35; // Standard plate cost\n            const platesCost = (formData.operational.plates || 0) * PLATE_COST_PER_PLATE;\n            // 3. Finishing Costs (cost per unit × actual units needed)\n            const actualUnitsNeeded = formData.operational.units || ((_formData_products_ = formData.products[0]) === null || _formData_products_ === void 0 ? void 0 : _formData_products_.quantity) || 0;\n            const finishingCost = formData.operational.finishing.reduce({\n                \"CreateQuoteContent.useEffect.finishingCost\": (total, f)=>{\n                    // Check if this finishing is used by any product using memoized check\n                    const isUsedByAnyProduct = productsFinishingCheck.some({\n                        \"CreateQuoteContent.useEffect.finishingCost.isUsedByAnyProduct\": (product)=>product.finishing.includes(f.name)\n                    }[\"CreateQuoteContent.useEffect.finishingCost.isUsedByAnyProduct\"]);\n                    if (isUsedByAnyProduct) {\n                        return total + (f.cost || 0) * actualUnitsNeeded;\n                    }\n                    return total;\n                }\n            }[\"CreateQuoteContent.useEffect.finishingCost\"], 0);\n            // 4. Calculate total costs with fallback for missing operational data\n            let basePrice = paperCost + platesCost + finishingCost;\n            // Fallback: If no operational data, use basic product calculation\n            if (basePrice === 0 && formData.products[0]) {\n                const product = formData.products[0];\n                const quantity = product.quantity || 0;\n                // Basic pricing based on product type and quantity\n                let basePricePerUnit = 0;\n                switch(product.productName){\n                    case 'Business Card':\n                        basePricePerUnit = 0.08; // $0.08 per card\n                        break;\n                    case 'Flyer A5':\n                        basePricePerUnit = 0.15; // $0.15 per flyer\n                        break;\n                    case 'Poster A2':\n                        basePricePerUnit = 2.50; // $2.50 per poster\n                        break;\n                    case 'Magazine':\n                        basePricePerUnit = 1.00; // $1.00 per magazine\n                        break;\n                    case 'Art Book':\n                        basePricePerUnit = 1.00; // $1.00 per book\n                        break;\n                    case 'Sticker Pack':\n                        basePricePerUnit = 0.50; // $0.50 per sticker pack\n                        break;\n                    default:\n                        basePricePerUnit = 0.10; // Default $0.10 per unit\n                }\n                basePrice = quantity * basePricePerUnit;\n            }\n            // Add additional costs to base price\n            const additionalCostsTotal = ((_formData_additionalCosts = formData.additionalCosts) === null || _formData_additionalCosts === void 0 ? void 0 : _formData_additionalCosts.reduce({\n                \"CreateQuoteContent.useEffect\": (total, cost)=>total + (cost.cost || 0)\n            }[\"CreateQuoteContent.useEffect\"], 0)) || 0;\n            const totalBasePrice = basePrice + additionalCostsTotal;\n            const marginAmount = totalBasePrice * MARGIN_PERCENTAGE;\n            const subtotal = totalBasePrice + marginAmount;\n            const vatAmount = subtotal * VAT_PERCENTAGE;\n            const totalPrice = subtotal + vatAmount;\n            console.log(\"Calculation triggered:\", {\n                paperCost,\n                platesCost,\n                finishingCost,\n                basePrice,\n                marginAmount,\n                subtotal,\n                vatAmount,\n                totalPrice,\n                productsFinishingCheck,\n                actualUnitsNeeded\n            });\n            setFormData({\n                \"CreateQuoteContent.useEffect\": (prev)=>({\n                        ...prev,\n                        calculation: {\n                            basePrice: totalBasePrice,\n                            marginAmount,\n                            marginPercentage: MARGIN_PERCENTAGE * 100,\n                            subtotal,\n                            finalSubtotal: subtotal,\n                            vatAmount,\n                            totalPrice\n                        }\n                    })\n            }[\"CreateQuoteContent.useEffect\"]);\n        }\n    }[\"CreateQuoteContent.useEffect\"], [\n        formData.operational.papers,\n        formData.operational.plates,\n        formData.operational.units,\n        formData.operational.finishing,\n        formData.additionalCosts,\n        productsFinishingCheck,\n        formData.products\n    ]);\n    const nextStep = ()=>setCurrentStep((s)=>Math.min(5, s + 1));\n    const prevStep = ()=>setCurrentStep((s)=>Math.max(1, s - 1));\n    // Scroll to top whenever step changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CreateQuoteContent.useEffect\": ()=>{\n            // Scroll to top immediately and smoothly\n            window.scrollTo({\n                top: 0,\n                behavior: 'smooth'\n            });\n            // Also ensure the main container is at the top\n            const mainContainer = document.querySelector('.min-h-screen');\n            if (mainContainer) {\n                mainContainer.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'start'\n                });\n            }\n            // Remove focus from any auto-focused elements to prevent scroll\n            const activeElement = document.activeElement;\n            if (activeElement && activeElement.blur) {\n                activeElement.blur();\n            }\n        }\n    }[\"CreateQuoteContent.useEffect\"], [\n        currentStep\n    ]);\n    // Add validation functions for Next button\n    const canProceedFromStep1 = ()=>{\n        return quoteMode !== null; // User must select either new or existing quote mode\n    };\n    const canProceedFromStep2 = ()=>{\n        if (quoteMode === \"new\") {\n            // For new quote mode, validate all essential fields including new ones\n            const client = formData.client;\n            // Basic required fields\n            const essentialFields = [\n                client.firstName,\n                client.email,\n                client.phone // Phone is required\n            ];\n            // Add company-specific required fields only if company type\n            if (client.clientType === \"Company\") {\n                essentialFields.push(client.companyName);\n            }\n            // Check if basic fields are filled\n            const basicFieldsValid = essentialFields.every((field)=>field && field.trim() !== \"\");\n            // Check TRN requirement (either TRN filled or \"No TRN\" selected)\n            const trnValid = client.hasNoTrn || client.trn && client.trn.trim() !== \"\";\n            // Check Area requirement\n            const areaValid = client.area && client.area.trim() !== \"\";\n            // Check State and Country (should have defaults)\n            const stateValid = client.state && client.state.trim() !== \"\";\n            const countryValid = client.country && client.country.trim() !== \"\";\n            return basicFieldsValid && trnValid && areaValid && stateValid && countryValid;\n        } else if (quoteMode === \"existing\") {\n            // For existing quote mode, we need to select an actual existing quote\n            return selectedQuoteId !== null; // Must have selected a specific quote to edit\n        }\n        return false;\n    };\n    const canProceedFromStep3 = ()=>{\n        // For existing quotes, we need to check if a quote is selected first\n        if (quoteMode === \"existing\" && !selectedQuoteId) {\n            console.log('🔍 Step 3 Validation: No quote selected for existing mode');\n            return false;\n        }\n        // Validate that at least one product has been configured with a paper\n        if (!formData.products || formData.products.length === 0) {\n            console.log('🔍 Step 3 Validation: No products found');\n            return false;\n        }\n        // Debug: Log all products and their papers\n        console.log('🔍 Step 3 Validation Debug:', {\n            quoteMode,\n            selectedQuoteId,\n            productsCount: formData.products.length,\n            products: formData.products.map((product, index)=>{\n                var _product_papers, _product_papers1;\n                return {\n                    index,\n                    productName: product.productName,\n                    papersCount: ((_product_papers = product.papers) === null || _product_papers === void 0 ? void 0 : _product_papers.length) || 0,\n                    papers: ((_product_papers1 = product.papers) === null || _product_papers1 === void 0 ? void 0 : _product_papers1.map((paper, pIndex)=>({\n                            pIndex,\n                            name: paper.name,\n                            gsm: paper.gsm,\n                            isValid: paper.name && paper.name !== \"Select Paper\" && paper.name.trim() !== \"\"\n                        }))) || []\n                };\n            })\n        });\n        // Check if any product has a valid paper selected (not \"Select Paper\")\n        const hasValidPaper = formData.products.some((product)=>product.papers && product.papers.length > 0 && product.papers.some((paper)=>paper.name && paper.name !== \"Select Paper\" && paper.name.trim() !== \"\"));\n        console.log('🔍 Step 3 Validation Result:', hasValidPaper);\n        return hasValidPaper;\n    };\n    const isNextButtonDisabled = ()=>{\n        if (currentStep === 1) {\n            const disabled = !canProceedFromStep1();\n            console.log('🔍 Next Button - Step 1:', disabled);\n            return disabled;\n        } else if (currentStep === 2) {\n            const disabled = !canProceedFromStep2();\n            console.log('🔍 Next Button - Step 2:', disabled);\n            return disabled;\n        } else if (currentStep === 3) {\n            const disabled = !canProceedFromStep3();\n            console.log('🔍 Next Button - Step 3:', disabled);\n            return disabled;\n        }\n        console.log('🔍 Next Button - Other step:', false);\n        return false;\n    };\n    const handleStartNew = ()=>{\n        console.log('Starting new quote - resetting all data');\n        // Create a completely clean client object\n        const cleanClient = {\n            clientType: \"Company\",\n            companyName: \"\",\n            contactPerson: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            emails: JSON.stringify([\n                \"\"\n            ]),\n            phone: \"\",\n            countryCode: \"+971\",\n            role: \"\",\n            trn: \"\",\n            hasNoTrn: false,\n            address: \"\",\n            city: \"\",\n            area: \"\",\n            state: \"Dubai\",\n            postalCode: \"\",\n            country: \"UAE\",\n            additionalInfo: \"\"\n        };\n        console.log('Clean client object created:', cleanClient);\n        // Reset form data completely\n        setFormData((prev)=>{\n            const newFormData = {\n                ...prev,\n                client: cleanClient,\n                // Start with completely empty products array for new quotes\n                products: []\n            };\n            console.log('New form data set:', newFormData);\n            return newFormData;\n        });\n        // Reset all customer-related state\n        setQuoteMode(\"new\");\n        setSelectedQuoteId(null);\n        setSelectedCustomer(null);\n        // Don't auto-navigate - just set the mode for selection\n        console.log('New quote mode selected - ready for next step');\n    };\n    const handleSelectQuote = (q)=>{\n        const detail = _lib_dummy_data__WEBPACK_IMPORTED_MODULE_13__.QUOTE_DETAILS[q.id];\n        if (!detail) return;\n        setFormData((prev)=>(0,_lib_detail_to_form__WEBPACK_IMPORTED_MODULE_14__.detailToForm)(detail, prev));\n        setQuoteMode(\"existing\");\n        setSelectedQuoteId(q.id); // Set the selected quote ID for updating\n    // Don't auto-navigate - just set the mode for selection\n    };\n    const handleSelectCustomer = (customer)=>{\n        setSelectedCustomer(customer);\n        setFormData((prev)=>({\n                ...prev,\n                client: {\n                    clientType: customer.clientType,\n                    companyName: customer.companyName || '',\n                    contactPerson: customer.contactPerson,\n                    email: customer.email,\n                    phone: customer.phone,\n                    countryCode: customer.countryCode,\n                    role: customer.role || '',\n                    address: customer.address || '',\n                    city: customer.city || '',\n                    state: customer.state || '',\n                    postalCode: customer.postalCode || '',\n                    country: customer.country || '',\n                    additionalInfo: customer.additionalInfo || ''\n                }\n            }));\n    };\n    const handleEditCustomer = (customer)=>{\n        // Handle editing customer - for now just select it\n        handleSelectCustomer(customer);\n    };\n    const handleCustomerSelect = async (customer)=>{\n        setSelectedCustomer({\n            id: customer.id,\n            clientType: customer.clientType || 'Individual',\n            companyName: customer.companyName || null,\n            contactPerson: customer.contactPerson,\n            email: customer.email,\n            phone: customer.phone || '',\n            countryCode: customer.countryCode || '',\n            role: customer.role || null,\n            address: customer.address || '',\n            city: customer.city || '',\n            state: customer.state || '',\n            postalCode: customer.postalCode || '',\n            country: customer.country || '',\n            additionalInfo: customer.additionalInfo || ''\n        });\n        // Ensure phone has a value - if empty, use a default\n        const phoneValue = customer.phone && customer.phone.trim() !== '' ? customer.phone : '0000000000';\n        console.log('=== AUTO-FILLING CLIENT DATA ===');\n        console.log('Customer data received:', customer);\n        console.log('Phone value:', phoneValue);\n        console.log('Email value:', customer.email);\n        setFormData((prev)=>({\n                ...prev,\n                client: {\n                    clientType: customer.clientType || 'Individual',\n                    companyName: customer.companyName || '',\n                    contactPerson: customer.contactPerson,\n                    email: customer.email,\n                    phone: phoneValue,\n                    countryCode: customer.countryCode || '+971',\n                    role: customer.role || '',\n                    address: customer.address || '',\n                    city: customer.city || '',\n                    state: customer.state || '',\n                    postalCode: customer.postalCode || '',\n                    country: customer.country || '',\n                    additionalInfo: customer.additionalInfo || ''\n                }\n            }));\n        console.log('Form data updated with client info');\n        // Auto-fill Step 3 data if customer has previous quotes\n        try {\n            // Use the existing quotes endpoint and filter by client ID\n            const quotesResponse = await fetch('/api/quotes');\n            if (!quotesResponse.ok) {\n                throw new Error('Failed to fetch quotes for autofill');\n            }\n            const allQuotes = await quotesResponse.json();\n            const clientQuotes = allQuotes.filter((quote)=>quote.clientId === customer.id);\n            if (clientQuotes.length > 0) {\n                // Group quotes by quoteId to get quote groups (a quote can have multiple products)\n                const quoteGroups = clientQuotes.reduce((groups, quote)=>{\n                    if (!groups[quote.quoteId]) {\n                        groups[quote.quoteId] = [];\n                    }\n                    groups[quote.quoteId].push(quote);\n                    return groups;\n                }, {});\n                // Get the most recent quote group (by date)\n                const latestQuoteId = Object.keys(quoteGroups).sort((a, b)=>{\n                    const dateA = new Date(quoteGroups[a][0].date);\n                    const dateB = new Date(quoteGroups[b][0].date);\n                    return dateB.getTime() - dateA.getTime();\n                })[0];\n                const latestQuotes = quoteGroups[latestQuoteId];\n                console.log('Latest quotes for autofill:', latestQuotes);\n                // Convert database quotes to products - consolidate all papers into one product\n                // Since all quotes in latestQuotes have the same quoteId, they represent one product with multiple papers\n                const firstQuote = latestQuotes[0];\n                // Parse colors if they exist\n                let colors;\n                if (firstQuote.colors) {\n                    try {\n                        colors = JSON.parse(firstQuote.colors);\n                    } catch (e) {\n                        console.warn('Failed to parse colors JSON:', firstQuote.colors);\n                    }\n                }\n                // Collect all papers from all quotes in this group\n                let allPapers = [];\n                latestQuotes.forEach((quote)=>{\n                    if (quote.papers && Array.isArray(quote.papers) && quote.papers.length > 0) {\n                        quote.papers.forEach((p)=>{\n                            // Try to find the best matching paper name from the database\n                            let paperName = p.name || 'Standard Paper';\n                            let paperGsm = p.gsm || '150';\n                            // Ensure we never have empty strings\n                            if (!paperName || paperName.trim() === '') {\n                                paperName = 'Standard Paper';\n                            }\n                            // Convert paperGsm to string and ensure it's not empty\n                            if (!paperGsm || String(paperGsm).trim() === '') {\n                                paperGsm = '150';\n                            }\n                            console.log(\"Processing paper: \".concat(paperName, \" with GSM: \").concat(paperGsm));\n                            // Store the clean paper name without any suffixes for better matching\n                            const cleanPaperName = paperName.replace(/\\s*\\(Custom\\)$/, '').trim();\n                            // Check if this paper is already added (avoid duplicates)\n                            const existingPaper = allPapers.find((ap)=>ap.name === cleanPaperName && ap.gsm === paperGsm);\n                            if (!existingPaper) {\n                                allPapers.push({\n                                    name: cleanPaperName,\n                                    gsm: paperGsm\n                                });\n                            }\n                        });\n                    }\n                });\n                // If no papers found, use default\n                if (allPapers.length === 0) {\n                    allPapers = [\n                        {\n                            name: 'Standard Paper',\n                            gsm: '150'\n                        }\n                    ];\n                }\n                console.log('Final consolidated papers array:', allPapers);\n                console.log('Paper names being stored:', allPapers.map((p)=>p.name));\n                // Collect all finishing from all quotes in this group\n                let allFinishing = [];\n                console.log('🔍 FINISHING DEBUG - Processing finishing from quotes...');\n                latestQuotes.forEach((quote)=>{\n                    console.log(\"\\uD83D\\uDD0D FINISHING DEBUG - Quote \".concat(quote.quoteId, \" finishing:\"), quote.finishing);\n                    if (quote.finishing && Array.isArray(quote.finishing) && quote.finishing.length > 0) {\n                        quote.finishing.forEach((f)=>{\n                            // Handle both string format (from API) and object format (from database)\n                            const finishingName = typeof f === 'string' ? f : f.name || f;\n                            console.log(\"\\uD83D\\uDD0D FINISHING DEBUG - Processing finishing item:\", f, '-> name:', finishingName);\n                            if (finishingName && !allFinishing.includes(finishingName)) {\n                                // Normalize finishing name to match Step 3 options (capitalize first letter)\n                                const normalizedName = finishingName.charAt(0).toUpperCase() + finishingName.slice(1).toLowerCase();\n                                console.log(\"\\uD83D\\uDD0D FINISHING DEBUG - Normalized name: \".concat(finishingName, \" -> \").concat(normalizedName));\n                                // Format finishing name based on sides\n                                if (firstQuote.sides === '2') {\n                                    // For double-sided, add both front and back options\n                                    allFinishing.push(\"\".concat(normalizedName, \"-Front\"));\n                                    allFinishing.push(\"\".concat(normalizedName, \"-Back\"));\n                                } else {\n                                    // For single-sided, just add the name\n                                    allFinishing.push(normalizedName);\n                                }\n                            }\n                        });\n                    }\n                });\n                console.log('🔍 FINISHING DEBUG - Final allFinishing array:', allFinishing);\n                console.log(\"Processing quote group \".concat(latestQuoteId, \":\"), {\n                    totalQuotes: latestQuotes.length,\n                    papers: allPapers,\n                    finishing: allFinishing,\n                    sides: firstQuote.sides,\n                    rawFinishingFromDB: latestQuotes.map((q)=>q.finishing)\n                });\n                // Create one product with all papers and finishing\n                const product = {\n                    productName: firstQuote.productName || firstQuote.product || 'Business Card',\n                    quantity: firstQuote.quantity,\n                    sides: firstQuote.sides === '1' || firstQuote.sides === '2' ? firstQuote.sides : '1',\n                    printingSelection: firstQuote.printingSelection || firstQuote.printing || 'Digital',\n                    flatSize: {\n                        width: firstQuote.flatSizeWidth || 0,\n                        height: firstQuote.flatSizeHeight || 0,\n                        spine: firstQuote.flatSizeSpine || null\n                    },\n                    closeSize: {\n                        width: firstQuote.closeSizeWidth || 0,\n                        height: firstQuote.closeSizeHeight || 0,\n                        spine: firstQuote.closeSizeSpine || null\n                    },\n                    useSameAsFlat: firstQuote.useSameAsFlat || false,\n                    papers: allPapers,\n                    // Ensure finishing array only contains valid strings\n                    finishing: allFinishing.filter((f)=>typeof f === 'string' && f.trim() !== ''),\n                    colors\n                };\n                const products = [\n                    {\n                        ...product,\n                        paperName: product.papers && product.papers.length > 0 ? product.papers[0].name : \"Standard Paper\"\n                    }\n                ];\n                // Update form data with all products\n                setFormData((prev)=>{\n                    const newFormData = {\n                        ...prev,\n                        products\n                    };\n                    console.log('Updating form data with autofilled products:', newFormData);\n                    console.log('🔍 FINISHING DEBUG - Product finishing array:', newFormData.products[0].finishing);\n                    console.log('🔍 FINISHING DEBUG - Product sides:', newFormData.products[0].sides);\n                    return newFormData;\n                });\n                console.log(\"Auto-filled \".concat(products.length, \" products from customer's previous quote:\"), products);\n            }\n        } catch (error) {\n            console.error('Error auto-filling quote data:', error);\n        }\n    };\n    // Function to map saved color descriptions to dropdown options\n    const mapColorToDropdownOption = (colorDesc)=>{\n        if (!colorDesc) return \"\";\n        const desc = colorDesc.toLowerCase();\n        // Map specific color descriptions to dropdown options\n        if (desc.includes(\"4/4 cmyk\") && desc.includes(\"2 pms\")) {\n            return \"4+2 Colors\";\n        } else if (desc.includes(\"4/4 cmyk\") && desc.includes(\"1 pms\")) {\n            return \"4+1 Colors\";\n        } else if (desc.includes(\"4/4 cmyk\") || desc.includes(\"4/4\")) {\n            return \"4 Colors (CMYK)\";\n        } else if (desc.includes(\"4/0 cmyk\") && desc.includes(\"2 pms\")) {\n            return \"4+2 Colors\";\n        } else if (desc.includes(\"4/0 cmyk\") && desc.includes(\"1 pms\")) {\n            return \"4+1 Colors\";\n        } else if (desc.includes(\"4/0 cmyk\") || desc.includes(\"4/0\")) {\n            return \"4 Colors (CMYK)\";\n        } else if (desc.includes(\"3 colors\") || desc.includes(\"3\")) {\n            return \"3 Colors\";\n        } else if (desc.includes(\"2 colors\") || desc.includes(\"2\")) {\n            return \"2 Colors\";\n        } else if (desc.includes(\"1 color\") || desc.includes(\"1\")) {\n            return \"1 Color\";\n        }\n        // Default fallback\n        return \"4 Colors (CMYK)\";\n    };\n    // Handle quote selection for editing existing quotes\n    const handleQuoteSelect = (quote)=>{\n        var _quote_finishing;\n        console.log('🎯 Quote selected for editing:', quote);\n        console.log('🔍 Quote finishing data:', quote.finishing);\n        console.log('🔍 Quote finishing type:', typeof quote.finishing);\n        console.log('🔍 Quote finishing length:', (_quote_finishing = quote.finishing) === null || _quote_finishing === void 0 ? void 0 : _quote_finishing.length);\n        // Set the selected quote ID for editing\n        setSelectedQuoteId(quote.id);\n        // Also set the customer data\n        handleCustomerSelect(quote.client);\n        // Update form data with the quote's complete product information\n        if (quote.product) {\n            var _quote_colors, _quote_colors1;\n            // Determine appropriate sizes based on product type\n            let defaultFlatSize = {\n                width: 9,\n                height: 5.5,\n                spine: 0\n            };\n            let defaultCloseSize = {\n                width: 9,\n                height: 5.5,\n                spine: 0\n            };\n            // Set appropriate default sizes for different product types\n            switch(quote.product.toLowerCase()){\n                case 'book':\n                case 'catalog':\n                case 'annual report':\n                case 'technical manual':\n                    defaultFlatSize = {\n                        width: 8.5,\n                        height: 11,\n                        spine: 0.5\n                    };\n                    defaultCloseSize = {\n                        width: 8.5,\n                        height: 11,\n                        spine: 0.5\n                    };\n                    break;\n                case 'brochure':\n                case 'flyer a5':\n                    defaultFlatSize = {\n                        width: 8.27,\n                        height: 11.69,\n                        spine: 0\n                    };\n                    defaultCloseSize = {\n                        width: 4.13,\n                        height: 11.69,\n                        spine: 0\n                    };\n                    break;\n                case 'poster':\n                    defaultFlatSize = {\n                        width: 18,\n                        height: 24,\n                        spine: 0\n                    };\n                    defaultCloseSize = {\n                        width: 18,\n                        height: 24,\n                        spine: 0\n                    };\n                    break;\n                case 'business card':\n                case 'business cards':\n                    defaultFlatSize = {\n                        width: 3.5,\n                        height: 2,\n                        spine: 0\n                    };\n                    defaultCloseSize = {\n                        width: 3.5,\n                        height: 2,\n                        spine: 0\n                    };\n                    break;\n                case 'letterhead':\n                    defaultFlatSize = {\n                        width: 8.5,\n                        height: 11,\n                        spine: 0\n                    };\n                    defaultCloseSize = {\n                        width: 8.5,\n                        height: 11,\n                        spine: 0\n                    };\n                    break;\n                default:\n                    defaultFlatSize = {\n                        width: 9,\n                        height: 5.5,\n                        spine: 0\n                    };\n                    defaultCloseSize = {\n                        width: 9,\n                        height: 5.5,\n                        spine: 0\n                    };\n            }\n            // Map saved colors to dropdown options\n            const mappedFrontColor = mapColorToDropdownOption((_quote_colors = quote.colors) === null || _quote_colors === void 0 ? void 0 : _quote_colors.front);\n            const mappedBackColor = mapColorToDropdownOption((_quote_colors1 = quote.colors) === null || _quote_colors1 === void 0 ? void 0 : _quote_colors1.back);\n            setFormData((prev)=>({\n                    ...prev,\n                    products: [\n                        {\n                            productName: quote.product || \"Printing Product\",\n                            paperName: quote.papers && quote.papers.length > 0 ? quote.papers[0].name : \"Standard Paper\",\n                            quantity: quote.quantity || 100,\n                            sides: quote.sides || \"1\",\n                            printingSelection: quote.printing || \"Digital\",\n                            flatSize: defaultFlatSize,\n                            closeSize: defaultCloseSize,\n                            useSameAsFlat: true,\n                            papers: quote.papers && quote.papers.length > 0 ? quote.papers.map((p)=>({\n                                    name: p.name,\n                                    gsm: p.gsm\n                                })) : [\n                                {\n                                    name: \"Standard Paper\",\n                                    gsm: \"150\"\n                                }\n                            ],\n                            finishing: (()=>{\n                                console.log('🔄 Processing finishing data...');\n                                console.log('  Original quote.finishing:', quote.finishing);\n                                if (!quote.finishing || !Array.isArray(quote.finishing) || quote.finishing.length === 0) {\n                                    console.log('  ❌ No finishing data or invalid format');\n                                    return [];\n                                }\n                                // Simply extract the finishing names - no side logic needed\n                                const mappedFinishing = quote.finishing.map((f)=>{\n                                    console.log(\"  Processing finishing item: \".concat(f.name));\n                                    return f.name;\n                                });\n                                console.log('  ✅ Final mapped finishing:', mappedFinishing);\n                                return mappedFinishing;\n                            })(),\n                            colors: {\n                                front: mappedFrontColor,\n                                back: mappedBackColor\n                            }\n                        }\n                    ]\n                }));\n            // Immediately ensure finishing data is loaded\n            ensureFinishingDataLoaded(quote);\n            console.log('📋 Form data updated with selected quote:', {\n                product: quote.product,\n                quantity: quote.quantity,\n                sides: quote.sides,\n                printing: quote.printing,\n                papers: quote.papers,\n                originalFinishing: quote.finishing,\n                colors: {\n                    front: mappedFrontColor,\n                    back: mappedBackColor\n                }\n            });\n            // Log the actual formData state after update\n            setTimeout(()=>{\n                console.log('🔄 FormData state after update:', formData);\n                console.log('🎯 Products array:', formData.products);\n                if (formData.products && formData.products.length > 0) {\n                    console.log('🎯 First product finishing:', formData.products[0].finishing);\n                    console.log('🎯 First product finishing type:', typeof formData.products[0].finishing);\n                    console.log('🎯 First product finishing isArray:', Array.isArray(formData.products[0].finishing));\n                }\n            }, 100);\n            // Force a re-render by updating the formData again\n            setTimeout(()=>{\n                console.log('🔄 Forcing re-render...');\n                setFormData((prevData)=>({\n                        ...prevData,\n                        products: prevData.products.map((p, idx)=>idx === 0 ? {\n                                ...p,\n                                finishing: p.finishing\n                            } : p)\n                    }));\n            }, 200);\n            // Additional fix: Ensure finishing data is properly loaded\n            setTimeout(()=>{\n                console.log('🔧 Additional finishing data fix...');\n                ensureFinishingDataLoaded(quote);\n            }, 300);\n        }\n    };\n    // Helper function to ensure finishing data is properly loaded\n    const ensureFinishingDataLoaded = (quote)=>{\n        console.log('🔧 Ensuring finishing data is loaded...');\n        if (quote.finishing && Array.isArray(quote.finishing) && quote.finishing.length > 0) {\n            const finishingNames = quote.finishing.map((f)=>f.name);\n            console.log('🔧 Setting finishing names:', finishingNames);\n            setFormData((prevData)=>({\n                    ...prevData,\n                    products: prevData.products.map((p, idx)=>idx === 0 ? {\n                            ...p,\n                            finishing: finishingNames\n                        } : p)\n                }));\n            return true;\n        }\n        return false;\n    };\n    // Get current user ID - use a valid user from the database\n    const getCurrentUserId = async ()=>{\n        try {\n            // Try to get the first available user from the database\n            const response = await fetch('/api/users');\n            if (response.ok) {\n                const users = await response.json();\n                if (users.length > 0) {\n                    // Use the first available user (usually admin)\n                    return users[0].id;\n                }\n            }\n        } catch (error) {\n            console.error('Error fetching users:', error);\n        }\n        // Fallback to a valid user ID if API fails\n        return 'cmekd5dtw0000x5kp7xvqz8w9'; // admin@example.com\n    };\n    // Validate form data before allowing save\n    const validateFormData = ()=>{\n        const errors = [];\n        // Debug: Log the current form data\n        console.log('Validating form data:', {\n            client: formData.client,\n            contactPerson: formData.client.contactPerson,\n            firstName: formData.client.firstName,\n            lastName: formData.client.lastName,\n            email: formData.client.email,\n            phone: formData.client.phone\n        });\n        // Check if client information is complete\n        if (!formData.client.email || !formData.client.phone) {\n            errors.push(\"Client email and phone are required\");\n        }\n        if (formData.client.clientType === \"Company\" && !formData.client.companyName) {\n            errors.push(\"Company name is required for company clients\");\n        }\n        // Check if we have either contactPerson OR both firstName and lastName\n        const hasContactPerson = formData.client.contactPerson && formData.client.contactPerson.trim() !== '';\n        const hasFullName = formData.client.firstName && formData.client.firstName.trim() !== '' && formData.client.lastName && formData.client.lastName.trim() !== '';\n        if (!hasContactPerson && !hasFullName) {\n            errors.push(\"Contact person name is required (or first name and last name)\");\n        }\n        // Address fields are optional but if provided, should be complete\n        const hasPartialAddress = formData.client.address || formData.client.city || formData.client.state || formData.client.postalCode || formData.client.country;\n        const hasCompleteAddress = formData.client.address && formData.client.city && formData.client.state && formData.client.postalCode && formData.client.country;\n        if (hasPartialAddress && !hasCompleteAddress) {\n            console.warn('Partial address provided - some address fields are missing');\n        // Don't throw error, just warn - address is optional\n        }\n        // Check if products exist and have required information\n        if (formData.products.length === 0) {\n            errors.push(\"At least one product must be added\");\n        }\n        formData.products.forEach((product, index)=>{\n            if (!product.productName || !product.quantity) {\n                errors.push(\"Product \".concat(index + 1, \" must have a name and quantity\"));\n            }\n        });\n        if (errors.length > 0) {\n            alert(\"Please fix the following issues:\\n\".concat(errors.join('\\n')));\n            return false;\n        }\n        return true;\n    };\n    // Validate and clean quote data before sending to database\n    const validateAndCleanQuoteData = (data)=>{\n        // Create a clean copy of the data to avoid mutating the original\n        const cleanedData = {\n            ...data\n        };\n        // Ensure papers array has valid objects\n        if (cleanedData.papers) {\n            // Handle nested papers structure (papers.create)\n            if (cleanedData.papers.create && Array.isArray(cleanedData.papers.create)) {\n                cleanedData.papers = cleanedData.papers.create.map((paper)=>({\n                        name: paper.name || \"Standard Paper\",\n                        gsm: paper.gsm ? String(paper.gsm) : \"150\",\n                        inputWidth: paper.inputWidth ? Number(paper.inputWidth) : null,\n                        inputHeight: paper.inputHeight ? Number(paper.inputHeight) : null,\n                        pricePerPacket: paper.pricePerPacket ? Number(paper.pricePerPacket) : null,\n                        pricePerSheet: paper.pricePerSheet ? Number(paper.pricePerSheet) : null,\n                        sheetsPerPacket: paper.sheetsPerPacket ? Number(paper.sheetsPerPacket) : null,\n                        recommendedSheets: paper.recommendedSheets ? Number(paper.recommendedSheets) : null,\n                        enteredSheets: paper.enteredSheets ? Number(paper.enteredSheets) : null,\n                        outputWidth: paper.outputWidth ? Number(paper.outputWidth) : null,\n                        outputHeight: paper.outputHeight ? Number(paper.outputHeight) : null,\n                        selectedColors: paper.selectedColors ? String(paper.selectedColors) : null\n                    }));\n            } else if (Array.isArray(cleanedData.papers)) {\n                // Handle flat papers structure\n                cleanedData.papers = cleanedData.papers.map((paper)=>({\n                        name: paper.name || \"Standard Paper\",\n                        gsm: paper.gsm ? String(paper.gsm) : \"150\",\n                        inputWidth: paper.inputWidth ? Number(paper.inputWidth) : null,\n                        inputHeight: paper.inputHeight ? Number(paper.inputHeight) : null,\n                        pricePerPacket: paper.pricePerPacket ? Number(paper.pricePerPacket) : null,\n                        pricePerSheet: paper.pricePerSheet ? Number(paper.pricePerSheet) : null,\n                        sheetsPerPacket: paper.sheetsPerPacket ? Number(paper.sheetsPerPacket) : null,\n                        recommendedSheets: paper.recommendedSheets ? Number(paper.recommendedSheets) : null,\n                        enteredSheets: paper.enteredSheets ? Number(paper.enteredSheets) : null,\n                        outputWidth: paper.outputWidth ? Number(paper.outputWidth) : null,\n                        outputHeight: paper.outputHeight ? Number(paper.outputHeight) : null,\n                        selectedColors: paper.selectedColors ? String(paper.selectedColors) : null\n                    }));\n            }\n        }\n        // Ensure finishing array has valid objects\n        if (cleanedData.finishing) {\n            // Handle nested finishing structure (finishing.create)\n            if (cleanedData.finishing.create && Array.isArray(cleanedData.finishing.create)) {\n                cleanedData.finishing = cleanedData.finishing.create.map((finish)=>({\n                        name: finish.name || \"Standard Finishing\",\n                        cost: finish.cost ? Number(finish.cost) : 0\n                    }));\n            } else if (Array.isArray(cleanedData.finishing)) {\n                // Handle flat finishing structure\n                cleanedData.finishing = cleanedData.finishing.map((finish)=>({\n                        name: finish.name || \"Standard Finishing\",\n                        cost: finish.cost ? Number(finish.cost) : 0\n                    }));\n            }\n        }\n        // Ensure amounts object has valid numbers\n        if (cleanedData.amounts) {\n            // Handle nested amounts structure (amounts.create)\n            if (cleanedData.amounts.create) {\n                cleanedData.amounts = {\n                    base: Number(cleanedData.amounts.create.base) || 0,\n                    vat: Number(cleanedData.amounts.create.vat) || 0,\n                    total: Number(cleanedData.amounts.create.total) || 0\n                };\n            } else {\n                // Handle flat amounts structure\n                cleanedData.amounts = {\n                    base: Number(cleanedData.amounts.base) || 0,\n                    vat: Number(cleanedData.amounts.vat) || 0,\n                    total: Number(cleanedData.amounts.total) || 0\n                };\n            }\n        }\n        // Ensure operational data has valid values\n        if (cleanedData.operational) {\n            // Handle nested operational structure (operational.create)\n            if (cleanedData.operational.create) {\n                cleanedData.operational = {\n                    plates: cleanedData.operational.create.plates ? Number(cleanedData.operational.create.plates) : null,\n                    units: cleanedData.operational.create.units ? Number(cleanedData.operational.create.units) : null\n                };\n            } else {\n                // Handle flat operational structure\n                cleanedData.operational = {\n                    plates: cleanedData.operational.plates ? Number(cleanedData.operational.plates) : null,\n                    units: cleanedData.operational.units ? Number(cleanedData.operational.units) : null\n                };\n            }\n        }\n        // Ensure essential fields are preserved and valid\n        if (cleanedData.date) {\n            cleanedData.date = new Date(cleanedData.date);\n        }\n        if (cleanedData.status) {\n            cleanedData.status = String(cleanedData.status);\n        }\n        if (cleanedData.clientId) {\n            cleanedData.clientId = String(cleanedData.clientId);\n        }\n        if (cleanedData.userId) {\n            cleanedData.userId = String(cleanedData.userId);\n        }\n        if (cleanedData.salesPersonId) {\n            cleanedData.salesPersonId = String(cleanedData.salesPersonId);\n        }\n        if (cleanedData.product) {\n            cleanedData.product = String(cleanedData.product);\n        }\n        if (cleanedData.quantity) {\n            cleanedData.quantity = Number(cleanedData.quantity) || 0;\n        }\n        if (cleanedData.sides) {\n            cleanedData.sides = String(cleanedData.sides);\n        }\n        if (cleanedData.printing) {\n            cleanedData.printing = String(cleanedData.printing);\n        }\n        if (cleanedData.quoteId) {\n            cleanedData.quoteId = String(cleanedData.quoteId);\n        }\n        // Handle colors field - convert object to string if needed\n        if (cleanedData.colors && typeof cleanedData.colors === 'object') {\n            // If colors is an object with front/back properties, convert to JSON string\n            cleanedData.colors = JSON.stringify(cleanedData.colors);\n        } else if (cleanedData.colors) {\n            cleanedData.colors = String(cleanedData.colors);\n        }\n        return cleanedData;\n    };\n    const handleSaveQuote = async function() {\n        let isUpdate = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n        setIsSaving(true);\n        try {\n            var _formData_products_, _formData_products_1, _formData_products_2, _formData_products_3;\n            // Debug: Log the current form data before processing\n            console.log('=== QUOTE CREATION DEBUG ===');\n            console.log('Current formData.client:', formData.client);\n            console.log('Current selectedCustomer:', selectedCustomer);\n            console.log('Current quoteMode:', quoteMode);\n            console.log('Current selectedQuoteId:', selectedQuoteId);\n            // Force synchronize form data - ensure all fields are properly set\n            let needsFormUpdate = false;\n            const updatedClient = {\n                ...formData.client\n            };\n            // Ensure all required fields have at least empty strings instead of undefined\n            if (updatedClient.email === undefined) {\n                updatedClient.email = '';\n                needsFormUpdate = true;\n            }\n            if (updatedClient.phone === undefined) {\n                updatedClient.phone = '';\n                needsFormUpdate = true;\n            }\n            if (updatedClient.contactPerson === undefined) {\n                updatedClient.contactPerson = '';\n                needsFormUpdate = true;\n            }\n            if (updatedClient.address === undefined) {\n                updatedClient.address = '';\n                needsFormUpdate = true;\n            }\n            if (updatedClient.city === undefined) {\n                updatedClient.city = '';\n                needsFormUpdate = true;\n            }\n            if (updatedClient.state === undefined) {\n                updatedClient.state = '';\n                needsFormUpdate = true;\n            }\n            if (updatedClient.postalCode === undefined) {\n                updatedClient.postalCode = '';\n                needsFormUpdate = true;\n            }\n            if (updatedClient.country === undefined) {\n                updatedClient.country = '';\n                needsFormUpdate = true;\n            }\n            // Ensure contactPerson is set if firstName and lastName are available\n            if (!updatedClient.contactPerson && (updatedClient.firstName || updatedClient.lastName)) {\n                const contactPerson = \"\".concat(updatedClient.firstName || '', \" \").concat(updatedClient.lastName || '').trim();\n                updatedClient.contactPerson = contactPerson;\n                needsFormUpdate = true;\n                console.log('Auto-setting contactPerson:', contactPerson);\n            }\n            // Update form data if needed\n            if (needsFormUpdate) {\n                setFormData((prev)=>({\n                        ...prev,\n                        client: updatedClient\n                    }));\n                console.log('Updated form data with synchronized client info:', updatedClient);\n            }\n            // Use the updated client data for validation\n            // If we have a selectedCustomer (existing customer), use that data for validation\n            let clientToValidate = needsFormUpdate ? updatedClient : formData.client;\n            // If using existing customer mode and we have selectedCustomer data, use that for validation\n            if (quoteMode === \"existing\" && selectedCustomer) {\n                console.log('=== SELECTED CUSTOMER DEBUG ===');\n                console.log('selectedCustomer object:', selectedCustomer);\n                console.log('selectedCustomer.email:', selectedCustomer.email);\n                console.log('selectedCustomer.phone:', selectedCustomer.phone);\n                console.log('selectedCustomer.contactPerson:', selectedCustomer.contactPerson);\n                // For existing customers, use the selectedCustomer data directly for validation\n                clientToValidate = {\n                    ...clientToValidate,\n                    email: selectedCustomer.email,\n                    phone: selectedCustomer.phone || '',\n                    contactPerson: selectedCustomer.contactPerson,\n                    clientType: selectedCustomer.clientType,\n                    companyName: selectedCustomer.companyName || '',\n                    role: selectedCustomer.role || '',\n                    address: selectedCustomer.address || '',\n                    city: selectedCustomer.city || '',\n                    state: selectedCustomer.state || '',\n                    postalCode: selectedCustomer.postalCode || '',\n                    country: selectedCustomer.country || '',\n                    countryCode: selectedCustomer.countryCode || '+971'\n                };\n                console.log('Using selectedCustomer data for validation:', clientToValidate);\n            }\n            // Debug: Log the client data being validated\n            console.log('=== CLIENT VALIDATION DEBUG ===');\n            console.log('Client data being validated:', clientToValidate);\n            console.log('Email:', clientToValidate.email);\n            console.log('Phone:', clientToValidate.phone);\n            console.log('Contact Person:', clientToValidate.contactPerson);\n            console.log('Address:', clientToValidate.address);\n            console.log('City:', clientToValidate.city);\n            console.log('State:', clientToValidate.state);\n            console.log('Postal Code:', clientToValidate.postalCode);\n            console.log('Country:', clientToValidate.country);\n            // Validate essential fields only\n            // Skip validation for existing customers since we know the data is valid\n            if (quoteMode === \"existing\" && selectedCustomer) {\n                console.log('Skipping validation for existing customer - data is pre-validated');\n            } else if (!clientToValidate.email || !clientToValidate.phone) {\n                console.error('Missing essential client fields:', {\n                    email: clientToValidate.email,\n                    phone: clientToValidate.phone\n                });\n                throw new Error('Missing required client information: email and phone are required');\n            }\n            // Check if we have either contactPerson OR both firstName and lastName\n            const hasContactPerson = clientToValidate.contactPerson && clientToValidate.contactPerson.trim() !== '';\n            const hasFullName = clientToValidate.firstName && clientToValidate.firstName.trim() !== '' && clientToValidate.lastName && clientToValidate.lastName.trim() !== '';\n            if (!hasContactPerson && !hasFullName) {\n                console.error('Missing name information:', {\n                    contactPerson: clientToValidate.contactPerson,\n                    firstName: clientToValidate.firstName,\n                    lastName: clientToValidate.lastName\n                });\n                throw new Error('Contact person name is required (or first name and last name)');\n            }\n            // Ensure contactPerson is set if we have firstName and lastName\n            if (!hasContactPerson && hasFullName) {\n                clientToValidate.contactPerson = \"\".concat(clientToValidate.firstName, \" \").concat(clientToValidate.lastName).trim();\n                console.log('Auto-generated contactPerson from firstName and lastName:', clientToValidate.contactPerson);\n            }\n            // Company validation only if company type\n            if (clientToValidate.clientType === \"Company\" && !clientToValidate.companyName) {\n                throw new Error('Company name is required for company clients');\n            }\n            // Address fields are optional but if provided, should be complete\n            const hasPartialAddress = clientToValidate.address || clientToValidate.city || clientToValidate.state || clientToValidate.postalCode || clientToValidate.country;\n            const hasCompleteAddress = clientToValidate.address && clientToValidate.city && clientToValidate.state && clientToValidate.postalCode && clientToValidate.country;\n            if (hasPartialAddress && !hasCompleteAddress) {\n                console.warn('Partial address provided - some address fields are missing');\n            // Don't throw error, just warn - address is optional\n            }\n            // First, save the client if it's a new client\n            let clientId = selectedCustomer === null || selectedCustomer === void 0 ? void 0 : selectedCustomer.id;\n            // If no selectedCustomer ID, we need to create a new client from form data\n            if (!clientId) {\n                // Create new client - Fix the data mapping\n                const clientData = {\n                    clientType: clientToValidate.clientType,\n                    companyName: clientToValidate.clientType === \"Company\" ? clientToValidate.companyName : null,\n                    contactPerson: clientToValidate.contactPerson || \"\".concat(clientToValidate.firstName || '', \" \").concat(clientToValidate.lastName || '').trim(),\n                    email: clientToValidate.email,\n                    phone: clientToValidate.phone,\n                    countryCode: clientToValidate.countryCode,\n                    role: clientToValidate.clientType === \"Company\" ? clientToValidate.role : null,\n                    address: clientToValidate.address || '',\n                    city: clientToValidate.city || '',\n                    state: clientToValidate.state || '',\n                    postalCode: clientToValidate.postalCode || '',\n                    country: clientToValidate.country || '',\n                    additionalInfo: clientToValidate.additionalInfo || ''\n                };\n                console.log('Creating new client with data:', clientData);\n                const clientResponse = await fetch('/api/clients', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(clientData)\n                });\n                if (!clientResponse.ok) {\n                    const errorText = await clientResponse.text();\n                    console.error('Client creation failed:', clientResponse.status, errorText);\n                    throw new Error(\"Failed to create client: \".concat(clientResponse.status, \" - \").concat(errorText));\n                }\n                const newClient = await clientResponse.json();\n                clientId = newClient.id;\n                // Update the selectedCustomer state with the newly created client\n                const newCustomerData = {\n                    id: newClient.id,\n                    clientType: newClient.clientType,\n                    companyName: newClient.companyName,\n                    contactPerson: newClient.contactPerson,\n                    email: newClient.email,\n                    phone: newClient.phone,\n                    countryCode: newClient.countryCode,\n                    role: newClient.role,\n                    address: newClient.address,\n                    city: newClient.city,\n                    state: newClient.state,\n                    postalCode: newClient.postalCode,\n                    country: newClient.country,\n                    additionalInfo: newClient.additionalInfo,\n                    firstName: formData.client.firstName || '',\n                    lastName: formData.client.lastName || ''\n                };\n                setSelectedCustomer(newCustomerData);\n                console.log('Updated selectedCustomer with new client:', newCustomerData);\n                // Also update the form data with the new customer information to ensure Step 5 displays correctly\n                setFormData((prev)=>({\n                        ...prev,\n                        client: {\n                            ...prev.client,\n                            // Update with the new customer data to ensure consistency\n                            contactPerson: newCustomerData.contactPerson,\n                            email: newCustomerData.email,\n                            phone: newCustomerData.phone,\n                            address: newCustomerData.address,\n                            city: newCustomerData.city,\n                            state: newCustomerData.state,\n                            postalCode: newCustomerData.postalCode,\n                            country: newCustomerData.country,\n                            additionalInfo: newCustomerData.additionalInfo,\n                            // Also ensure firstName and lastName are set if they exist\n                            firstName: newCustomerData.firstName || prev.client.firstName || '',\n                            lastName: newCustomerData.lastName || prev.client.lastName || ''\n                        }\n                    }));\n                console.log('Updated form data with new customer information for Step 5 display');\n                // Log the final state for debugging\n                console.log('=== FINAL STATE AFTER CLIENT CREATION ===');\n                console.log('New client ID:', clientId);\n                console.log('Updated selectedCustomer:', newCustomerData);\n                console.log('Updated formData.client:', formData.client);\n                console.log('Client created successfully:', newClient);\n            }\n            // Get current user ID\n            const currentUserId = await getCurrentUserId();\n            // Debug: Log the customer information being used\n            console.log('Creating quote with customer info:', {\n                clientId,\n                selectedCustomer,\n                formDataClient: formData.client,\n                newCustomerData: clientId ? 'Using existing customer' : 'Created new customer'\n            });\n            // Prepare quote data for API - Fix the data structure to match DatabaseService expectations\n            const quoteData = {\n                date: new Date(),\n                status: \"Pending\",\n                clientId: clientId,\n                userId: currentUserId,\n                salesPersonId: formData.salesPersonId,\n                product: ((_formData_products_ = formData.products[0]) === null || _formData_products_ === void 0 ? void 0 : _formData_products_.productName) || \"Printing Product\",\n                quantity: ((_formData_products_1 = formData.products[0]) === null || _formData_products_1 === void 0 ? void 0 : _formData_products_1.quantity) || 0,\n                sides: ((_formData_products_2 = formData.products[0]) === null || _formData_products_2 === void 0 ? void 0 : _formData_products_2.sides) || \"1\",\n                printing: ((_formData_products_3 = formData.products[0]) === null || _formData_products_3 === void 0 ? void 0 : _formData_products_3.printingSelection) || \"Digital\"\n            };\n            // Debug: Log the quote data being sent\n            console.log('=== QUOTE DATA DEBUG ===');\n            console.log('Quote data being sent:', quoteData);\n            console.log('salesPersonId:', formData.salesPersonId);\n            console.log('Customer ID being used:', clientId);\n            console.log('Selected customer state:', selectedCustomer);\n            console.log('formData.operational.papers:', formData.operational.papers);\n            console.log('formData.operational.finishing:', formData.operational.finishing);\n            let quoteResponse;\n            let savedQuote;\n            // Check if we're actually editing an existing quote (has selectedQuoteId)\n            if (selectedQuoteId && isUpdate) {\n                var _formData_products_4, _formData_calculation_discount;\n                // Update existing quote - we have a specific quote ID to edit\n                console.log('Updating existing quote:', selectedQuoteId);\n                console.log('=== QUOTE DATA DEBUG (UPDATE) ===');\n                console.log('Quote data being sent:', quoteData);\n                console.log('salesPersonId:', formData.salesPersonId);\n                // Use Step 5 calculation results directly - no recalculation needed\n                const totalPrice = formData.calculation.totalPrice || 0;\n                const totalBasePrice = formData.calculation.basePrice || 0;\n                const vatAmount = formData.calculation.vatAmount || 0;\n                console.log('=== USING STEP 5 CALCULATION RESULTS ===');\n                console.log('Step 5 totalPrice:', totalPrice);\n                console.log('Step 5 basePrice:', totalBasePrice);\n                console.log('Step 5 vatAmount:', vatAmount);\n                // For updates, we can include additional data like papers, finishing, amounts\n                const updateData = {\n                    ...quoteData,\n                    salesPersonId: formData.salesPersonId,\n                    colors: ((_formData_products_4 = formData.products[0]) === null || _formData_products_4 === void 0 ? void 0 : _formData_products_4.colors) || null,\n                    // Include discount information\n                    discountPercentage: ((_formData_calculation_discount = formData.calculation.discount) === null || _formData_calculation_discount === void 0 ? void 0 : _formData_calculation_discount.percentage) || 0,\n                    discountAmount: formData.calculation.discountAmount || 0,\n                    papers: {\n                        create: formData.operational.papers.map((operationalPaper, index)=>{\n                            var _formData_products_;\n                            // Get the corresponding paper name and gsm from product papers\n                            const productPaper = ((_formData_products_ = formData.products[0]) === null || _formData_products_ === void 0 ? void 0 : _formData_products_.papers[index]) || null;\n                            return {\n                                name: (productPaper === null || productPaper === void 0 ? void 0 : productPaper.name) || \"Standard Paper\",\n                                gsm: (productPaper === null || productPaper === void 0 ? void 0 : productPaper.gsm) ? parseInt(productPaper.gsm) : 150,\n                                inputWidth: operationalPaper.inputWidth || 0,\n                                inputHeight: operationalPaper.inputHeight || 0,\n                                pricePerPacket: operationalPaper.pricePerPacket || 0,\n                                pricePerSheet: operationalPaper.pricePerSheet || 0,\n                                sheetsPerPacket: operationalPaper.sheetsPerPacket || 1,\n                                recommendedSheets: operationalPaper.recommendedSheets || 1,\n                                enteredSheets: operationalPaper.enteredSheets || 1,\n                                outputWidth: operationalPaper.outputWidth || 0,\n                                outputHeight: operationalPaper.outputHeight || 0,\n                                selectedColors: operationalPaper.selectedColors || \"\"\n                            };\n                        }) || []\n                    },\n                    finishing: {\n                        create: formData.operational.finishing.map((finish)=>({\n                                name: finish.name || \"Standard Finishing\",\n                                cost: finish.cost || 0\n                            })) || []\n                    },\n                    amounts: {\n                        create: {\n                            base: totalBasePrice,\n                            vat: vatAmount,\n                            total: totalPrice // Use Step 5 total price - EXACTLY the same as Step 5 final price\n                        }\n                    },\n                    operational: {\n                        create: {\n                            plates: formData.operational.plates || 0,\n                            units: formData.operational.units || 0\n                        }\n                    }\n                };\n                // Validate and clean the update data before sending\n                const cleanedUpdateData = validateAndCleanQuoteData(updateData);\n                console.log('Quote data being sent for update:', cleanedUpdateData);\n                quoteResponse = await fetch(\"/api/quotes/\".concat(selectedQuoteId), {\n                    method: 'PUT',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(cleanedUpdateData)\n                });\n                if (!quoteResponse.ok) {\n                    const errorText = await quoteResponse.text();\n                    console.error('Quote update failed:', quoteResponse.status, errorText);\n                    throw new Error(\"Failed to update quote: \".concat(quoteResponse.status, \" - \").concat(errorText));\n                }\n                savedQuote = await quoteResponse.json();\n                console.log('Quote updated successfully:', savedQuote);\n                // Show success message for update\n                alert('Quote updated successfully!');\n                return;\n            } else {\n                var _formData_products_5, _formData_calculation_discount1;\n                // Create new quote - even if using existing customer, this is a new quote\n                console.log('Creating new quote with complete details');\n                console.log('=== COMPLETE QUOTE DATA DEBUG ===');\n                console.log('formData.salesPersonId:', formData.salesPersonId);\n                console.log('formData.operational.papers:', formData.operational.papers);\n                console.log('formData.operational.finishing:', formData.operational.finishing);\n                // Generate a unique quote ID in proper format: QT-YYYY-MMDD-XXX\n                const now = new Date();\n                const year = now.getFullYear();\n                const month = String(now.getMonth() + 1).padStart(2, '0');\n                const day = String(now.getDate()).padStart(2, '0');\n                const randomNum = String(Math.floor(Math.random() * 1000)).padStart(3, '0');\n                const quoteId = \"QT-\".concat(year, \"-\").concat(month).concat(day, \"-\").concat(randomNum);\n                // Use Step 5 calculation results directly - no recalculation needed\n                const totalPrice = formData.calculation.totalPrice || 0;\n                const totalBasePrice = formData.calculation.basePrice || 0;\n                const vatAmount = formData.calculation.vatAmount || 0;\n                console.log('=== USING STEP 5 CALCULATION RESULTS ===');\n                console.log('Step 5 totalPrice:', totalPrice);\n                console.log('Step 5 basePrice:', totalBasePrice);\n                console.log('Step 5 vatAmount:', vatAmount);\n                // Prepare complete quote data with all details\n                const completeQuoteData = {\n                    ...quoteData,\n                    quoteId: quoteId,\n                    salesPersonId: formData.salesPersonId,\n                    colors: ((_formData_products_5 = formData.products[0]) === null || _formData_products_5 === void 0 ? void 0 : _formData_products_5.colors) || null,\n                    // Include discount information\n                    discountPercentage: ((_formData_calculation_discount1 = formData.calculation.discount) === null || _formData_calculation_discount1 === void 0 ? void 0 : _formData_calculation_discount1.percentage) || 0,\n                    discountAmount: formData.calculation.discountAmount || 0,\n                    papers: {\n                        create: formData.operational.papers.map((operationalPaper, index)=>{\n                            var _formData_products_;\n                            // Get the corresponding paper name and gsm from product papers\n                            const productPaper = ((_formData_products_ = formData.products[0]) === null || _formData_products_ === void 0 ? void 0 : _formData_products_.papers[index]) || null;\n                            return {\n                                name: (productPaper === null || productPaper === void 0 ? void 0 : productPaper.name) || \"Standard Paper\",\n                                gsm: (productPaper === null || productPaper === void 0 ? void 0 : productPaper.gsm) ? parseInt(productPaper.gsm) : 150,\n                                inputWidth: operationalPaper.inputWidth || 0,\n                                inputHeight: operationalPaper.inputHeight || 0,\n                                pricePerPacket: operationalPaper.pricePerPacket || 0,\n                                pricePerSheet: operationalPaper.pricePerSheet || 0,\n                                sheetsPerPacket: operationalPaper.sheetsPerPacket || 1,\n                                recommendedSheets: operationalPaper.recommendedSheets || 1,\n                                enteredSheets: operationalPaper.enteredSheets || 1,\n                                outputWidth: operationalPaper.outputWidth || 0,\n                                outputHeight: operationalPaper.outputHeight || 0,\n                                selectedColors: operationalPaper.selectedColors || \"\"\n                            };\n                        }) || []\n                    },\n                    finishing: {\n                        create: formData.operational.finishing.map((finish)=>({\n                                name: finish.name || \"Standard Finishing\",\n                                cost: finish.cost || 0\n                            })) || []\n                    },\n                    amounts: {\n                        create: {\n                            base: totalBasePrice,\n                            vat: vatAmount,\n                            total: totalPrice // Use Step 5 total price - EXACTLY the same as Step 5 final price\n                        }\n                    },\n                    operational: {\n                        create: {\n                            plates: formData.operational.plates || 0,\n                            units: formData.operational.units || 0\n                        }\n                    }\n                };\n                // Validate and clean the data before sending\n                const cleanedQuoteData = validateAndCleanQuoteData(completeQuoteData);\n                console.log('=== FINAL QUOTE DATA DEBUG ===');\n                console.log('Original quoteData:', quoteData);\n                console.log('Complete quote data before cleaning:', completeQuoteData);\n                console.log('=== AMOUNTS DEBUG - USING STEP 5 VALUES ===');\n                console.log('formData.calculation:', formData.calculation);\n                console.log('Step 5 totalPrice being saved:', totalPrice);\n                console.log('Step 5 basePrice being saved:', totalBasePrice);\n                console.log('Step 5 vatAmount being saved:', vatAmount);\n                console.log('completeQuoteData.amounts:', completeQuoteData.amounts);\n                console.log('Cleaned amounts:', cleanedQuoteData.amounts);\n                console.log('Cleaned quote data being sent:', cleanedQuoteData);\n                console.log('salesPersonId in cleaned data:', cleanedQuoteData.salesPersonId);\n                quoteResponse = await fetch('/api/quotes', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(cleanedQuoteData)\n                });\n                if (!quoteResponse.ok) {\n                    const errorText = await quoteResponse.text();\n                    console.error('Quote creation failed:', quoteResponse.status, errorText);\n                    throw new Error(\"Failed to create quote: \".concat(quoteResponse.status, \" - \").concat(errorText));\n                }\n                savedQuote = await quoteResponse.json();\n                console.log('Quote created successfully with all details:', savedQuote);\n            }\n            // Show success modal only for new quotes\n            if (!isUpdate) {\n                setSaveModalOpen(true);\n            }\n        } catch (error) {\n            console.error('Error saving quote:', error);\n            // Use a more user-friendly error message\n            const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\n            const action = selectedQuoteId && isUpdate ? 'updating' : 'creating';\n            alert(\"Error \".concat(action, \" quote: \").concat(errorMessage));\n        } finally{\n            setIsSaving(false);\n        }\n    };\n    const handleDownloadCustomerFromModal = async ()=>{\n        await (0,_lib_quote_pdf__WEBPACK_IMPORTED_MODULE_12__.downloadCustomerPdf)(formData, otherQuantities);\n        setSaveModalOpen(false);\n    };\n    const handleDownloadOpsFromModal = async ()=>{\n        await (0,_lib_quote_pdf__WEBPACK_IMPORTED_MODULE_12__.downloadOpsPdf)(formData, otherQuantities);\n        setSaveModalOpen(false);\n    };\n    const handleCloseAndGoHome = ()=>{\n        setSaveModalOpen(false);\n        router.push(\"/\");\n    };\n    // Handle approval status changes from Step5\n    const handleApprovalStatusChange = (needsApproval, reason)=>{\n        setRequiresApproval(needsApproval);\n        setApprovalReason(reason);\n    };\n    const renderStepContent = ()=>{\n        switch(currentStep){\n            case 1:\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"space-y-8\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-center space-y-2 sm:space-y-3\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                    className: \"text-xl sm:text-2xl font-bold text-slate-900\",\n                                    children: \"Create A Quote\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                    lineNumber: 1746,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    className: \"text-base sm:text-lg text-slate-600\",\n                                    children: \"Choose how you'd like to create your printing quote\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                    lineNumber: 1747,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                            lineNumber: 1745,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"grid grid-cols-1 lg:grid-cols-2 gap-6 sm:gap-8 max-w-4xl mx-auto\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_2__.Card, {\n                                    className: \"border-0 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1 cursor-pointer group \".concat(quoteMode === \"new\" ? \"ring-4 ring-blue-500 ring-opacity-50 bg-blue-50\" : \"\"),\n                                    onClick: handleStartNew,\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_2__.CardContent, {\n                                        className: \"p-4 sm:p-6 lg:p-8 text-center space-y-4 sm:space-y-6\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"w-16 h-16 sm:w-20 sm:h-20 bg-gradient-to-br from-blue-500 to-blue-600 rounded-2xl flex items-center justify-center mx-auto group-hover:scale-110 transition-transform duration-300\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Copy_FileText_Plus_Save_Sparkles_lucide_react__WEBPACK_IMPORTED_MODULE_15__[\"default\"], {\n                                                    className: \"w-8 h-8 sm:w-10 sm:h-10 text-white\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                    lineNumber: 1761,\n                                                    columnNumber: 21\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                lineNumber: 1760,\n                                                columnNumber: 19\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"space-y-2 sm:space-y-3\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                                        className: \"text-xl sm:text-2xl font-bold text-slate-900\",\n                                                        children: \"Create New Quote\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                        lineNumber: 1764,\n                                                        columnNumber: 21\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                        className: \"text-sm sm:text-base text-slate-600 leading-relaxed\",\n                                                        children: \"Start a fresh quotation from scratch. Perfect for new projects, custom requirements, or when you need complete control over the quote details.\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                        lineNumber: 1765,\n                                                        columnNumber: 21\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                lineNumber: 1763,\n                                                columnNumber: 19\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"pt-2 sm:pt-4\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_3__.Button, {\n                                                    className: \"w-full bg-[#27aae1] hover:bg-[#1e8bc3] text-white py-2 sm:py-3 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 text-sm sm:text-base\",\n                                                    onClick: handleStartNew,\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Copy_FileText_Plus_Save_Sparkles_lucide_react__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n                                                            className: \"w-4 h-4 sm:w-5 sm:h-5 mr-2\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                            lineNumber: 1774,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        \"Start New Quote\"\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                    lineNumber: 1770,\n                                                    columnNumber: 21\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                lineNumber: 1769,\n                                                columnNumber: 19\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                        lineNumber: 1759,\n                                        columnNumber: 17\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                    lineNumber: 1753,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_2__.Card, {\n                                    className: \"border-0 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1 cursor-pointer group \".concat(quoteMode === \"existing\" ? \"ring-4 ring-blue-500 ring-opacity-50 bg-blue-50\" : \"\"),\n                                    onClick: ()=>{\n                                        // Clear default product data when entering existing quote mode\n                                        setFormData((prev)=>({\n                                                ...prev,\n                                                products: [] // Clear products array - will be populated from selected quote\n                                            }));\n                                        setQuoteMode(\"existing\");\n                                        setSelectedQuoteId(null); // Will be set when a specific quote is selected\n                                        setSelectedCustomer(null);\n                                    // Don't auto-navigate - just set the mode for selection\n                                    },\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_2__.CardContent, {\n                                        className: \"p-4 sm:p-6 lg:p-8 text-center space-y-4 sm:space-y-6\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"w-16 h-16 sm:w-20 sm:h-20 bg-gradient-to-br from-blue-500 to-blue-600 rounded-2xl flex items-center justify-center mx-auto group-hover:scale-110 transition-transform duration-300\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Copy_FileText_Plus_Save_Sparkles_lucide_react__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n                                                    className: \"w-8 h-8 sm:w-10 sm:h-10 text-white\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                    lineNumber: 1800,\n                                                    columnNumber: 21\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                lineNumber: 1799,\n                                                columnNumber: 19\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"space-y-2 sm:space-y-3\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                                        className: \"text-xl sm:text-2xl font-bold text-slate-900\",\n                                                        children: \"Based on Previous Quote\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                        lineNumber: 1803,\n                                                        columnNumber: 21\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                        className: \"text-sm sm:text-base text-slate-600 leading-relaxed\",\n                                                        children: \"Use an existing quote as a template. Save time by modifying previous specifications, pricing, and customer details for similar projects.\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                        lineNumber: 1804,\n                                                        columnNumber: 21\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                lineNumber: 1802,\n                                                columnNumber: 19\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"pt-2 sm:pt-4\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_3__.Button, {\n                                                    className: \"w-full bg-[#27aae1] hover:bg-[#1e8bc3] text-white py-2 sm:py-3 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 text-sm sm:text-base\",\n                                                    onClick: ()=>{\n                                                        // Clear default product data when entering existing quote mode\n                                                        setFormData((prev)=>({\n                                                                ...prev,\n                                                                products: [] // Clear products array - will be populated from selected quote\n                                                            }));\n                                                        setQuoteMode(\"existing\");\n                                                        setSelectedQuoteId(null); // Will be set when a specific quote is selected\n                                                        setSelectedCustomer(null);\n                                                    // Don't auto-navigate - just set the mode for selection\n                                                    },\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Copy_FileText_Plus_Save_Sparkles_lucide_react__WEBPACK_IMPORTED_MODULE_18__[\"default\"], {\n                                                            className: \"w-4 h-4 sm:w-5 sm:h-5 mr-2\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                            lineNumber: 1823,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        \"Use Existing Quote\"\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                    lineNumber: 1809,\n                                                    columnNumber: 21\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                lineNumber: 1808,\n                                                columnNumber: 19\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                        lineNumber: 1798,\n                                        columnNumber: 17\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                    lineNumber: 1782,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                            lineNumber: 1751,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-center text-slate-500 max-w-2xl mx-auto\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"text-xs sm:text-sm\",\n                                children: \"Both options will guide you through the same comprehensive quote creation process, ensuring accuracy and consistency in your printing estimates.\"\n                            }, void 0, false, {\n                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                lineNumber: 1833,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                            lineNumber: 1832,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                    lineNumber: 1743,\n                    columnNumber: 11\n                }, this);\n            case 2:\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"space-y-6\",\n                    children: [\n                        quoteMode === \"new\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-center space-y-2 sm:space-y-3\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                    className: \"text-xl sm:text-2xl font-bold text-slate-900\",\n                                    children: \"Customer Details\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                    lineNumber: 1845,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    className: \"text-base sm:text-base text-slate-600\",\n                                    children: \"Fill in the customer information for your new quote\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                    lineNumber: 1846,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                            lineNumber: 1844,\n                            columnNumber: 15\n                        }, this),\n                        quoteMode === \"existing\" ? // Use Step2CustomerChoose component for existing quote mode\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_create_quote_steps_Step2CustomerChoose__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                            formData: formData,\n                            setFormData: setFormData,\n                            onCustomerSelect: handleCustomerSelect,\n                            onQuoteSelect: handleQuoteSelect\n                        }, void 0, false, {\n                            fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                            lineNumber: 1854,\n                            columnNumber: 15\n                        }, this) : // Show empty customer detail form for new quote\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"bg-white p-6 rounded-xl border border-slate-200 shadow-sm\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n                                    className: \"text-lg font-semibold text-slate-900 mb-4 flex items-center\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"w-2 h-2 bg-[#27aae1] rounded-full mr-3\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                            lineNumber: 1864,\n                                            columnNumber: 19\n                                        }, this),\n                                        \"New Customer Details\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                    lineNumber: 1863,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_create_quote_steps_Step2CustomerDetail__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                    formData: formData,\n                                    setFormData: setFormData\n                                }, void 0, false, {\n                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                    lineNumber: 1867,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                            lineNumber: 1862,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                    lineNumber: 1842,\n                    columnNumber: 11\n                }, this);\n            case 3:\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_create_quote_steps_Step3ProductSpec__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                    formData: formData,\n                    setFormData: setFormData\n                }, void 0, false, {\n                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                    lineNumber: 1874,\n                    columnNumber: 11\n                }, this);\n            case 4:\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((_components_create_quote_steps_Step4Operational__WEBPACK_IMPORTED_MODULE_10___default()), {\n                    formData: formData,\n                    setFormData: setFormData\n                }, void 0, false, {\n                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                    lineNumber: 1878,\n                    columnNumber: 11\n                }, this);\n            case 5:\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_create_quote_steps_Step5Quotation__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n                    formData: formData,\n                    setFormData: setFormData,\n                    otherQuantities: otherQuantities,\n                    setOtherQuantities: setOtherQuantities,\n                    onOpenSave: ()=>{\n                        // Validate form data before opening save modal\n                        if (validateFormData()) {\n                            setSaveModalOpen(true);\n                        }\n                    },\n                    isEditMode: !!selectedQuoteId,\n                    selectedQuoteId: selectedQuoteId,\n                    onSubmitQuote: async (updatedFormData)=>{\n                        // This function will be called by Step5Quotation to actually submit the quote\n                        try {\n                            // Update the form data first\n                            setFormData(updatedFormData);\n                            // Then call the actual save function\n                            await handleSaveQuote(false);\n                            console.log('Quote submitted successfully from Step5Quotation');\n                        } catch (error) {\n                            console.error('Error submitting quote from Step5Quotation:', error);\n                            throw error; // Re-throw to let Step5Quotation handle the error\n                        }\n                    },\n                    onApprovalStatusChange: handleApprovalStatusChange\n                }, void 0, false, {\n                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                    lineNumber: 1882,\n                    columnNumber: 11\n                }, this);\n            default:\n                return null;\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 p-4 sm:p-6 lg:p-8\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"max-w-7xl mx-auto space-y-6\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_2__.Card, {\n                    className: \"border-0 shadow-lg\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_2__.CardContent, {\n                        className: \"p-4 sm:p-6 lg:p-10 space-y-6 sm:space-y-10\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_create_quote_StepIndicator__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                                activeStep: currentStep,\n                                quoteMode: quoteMode\n                            }, void 0, false, {\n                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                lineNumber: 1924,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"mt-4 sm:mt-8\",\n                                children: renderStepContent()\n                            }, void 0, false, {\n                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                lineNumber: 1929,\n                                columnNumber: 13\n                            }, this),\n                            currentStep === 1 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"mt-4 sm:mt-6\",\n                                children: !canProceedFromStep1() ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"bg-yellow-50 border border-yellow-200 rounded-lg p-4\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex items-center space-x-2\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"w-5 h-5 rounded-full bg-yellow-500 flex items-center justify-center\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"text-white text-xs font-bold\",\n                                                    children: \"!\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                    lineNumber: 1938,\n                                                    columnNumber: 25\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                lineNumber: 1937,\n                                                columnNumber: 23\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                className: \"text-yellow-700 font-medium text-sm sm:text-base\",\n                                                children: 'Please select either \"Create New Quote\" or \"Based on Previous Quote\" to continue'\n                                            }, void 0, false, {\n                                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                lineNumber: 1940,\n                                                columnNumber: 23\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                        lineNumber: 1936,\n                                        columnNumber: 21\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                    lineNumber: 1935,\n                                    columnNumber: 19\n                                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"bg-green-50 border border-green-200 rounded-lg p-4\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex items-center space-x-2\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"w-5 h-5 rounded-full bg-green-500 flex items-center justify-center\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"text-white text-xs font-bold\",\n                                                    children: \"✓\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                    lineNumber: 1949,\n                                                    columnNumber: 25\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                lineNumber: 1948,\n                                                columnNumber: 23\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                className: \"text-green-700 font-medium text-sm sm:text-base\",\n                                                children: quoteMode === \"new\" ? \"New quote mode selected. You can proceed to the next step.\" : \"Existing quote mode selected. You can proceed to the next step.\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                lineNumber: 1951,\n                                                columnNumber: 23\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                        lineNumber: 1947,\n                                        columnNumber: 21\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                    lineNumber: 1946,\n                                    columnNumber: 19\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                lineNumber: 1933,\n                                columnNumber: 15\n                            }, this),\n                            currentStep === 3 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"mt-4 sm:mt-6\",\n                                children: !canProceedFromStep3() ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"bg-yellow-50 border border-yellow-200 rounded-lg p-4\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex items-center space-x-2\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"w-5 h-5 rounded-full bg-yellow-500 flex items-center justify-center\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"text-white text-xs font-bold\",\n                                                    children: \"!\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                    lineNumber: 1966,\n                                                    columnNumber: 25\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                lineNumber: 1965,\n                                                columnNumber: 23\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                className: \"text-yellow-700 font-medium text-sm sm:text-base\",\n                                                children: quoteMode === \"existing\" && !selectedQuoteId ? \"Please select a specific quote to edit first.\" : \"Please select at least one paper for your products to continue. Use the \\\"Browse Available Papers\\\" button to add papers from the database.\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                lineNumber: 1968,\n                                                columnNumber: 23\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                        lineNumber: 1964,\n                                        columnNumber: 21\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                    lineNumber: 1963,\n                                    columnNumber: 19\n                                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"bg-green-50 border border-green-200 rounded-lg p-4\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex items-center space-x-2\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"w-5 h-5 rounded-full bg-green-500 flex items-center justify-center\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"text-white text-xs font-bold\",\n                                                    children: \"✓\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                    lineNumber: 1980,\n                                                    columnNumber: 25\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                lineNumber: 1979,\n                                                columnNumber: 23\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                className: \"text-green-700 font-medium text-sm sm:text-base\",\n                                                children: quoteMode === \"existing\" ? \"Quote loaded and paper selection complete. You can now proceed to the operational step.\" : \"Paper selection complete. You can now proceed to the operational step.\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                lineNumber: 1982,\n                                                columnNumber: 23\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                        lineNumber: 1978,\n                                        columnNumber: 21\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                    lineNumber: 1977,\n                                    columnNumber: 19\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                lineNumber: 1961,\n                                columnNumber: 15\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"mt-8 sm:mt-12 pt-6 sm:pt-8 border-t border-slate-200 flex flex-col sm:flex-row justify-between items-center space-y-4 sm:space-y-0\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"w-full sm:w-auto\",\n                                        children: currentStep > 1 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_3__.Button, {\n                                            variant: \"outline\",\n                                            onClick: prevStep,\n                                            className: \"border-slate-300 hover:border-slate-400 hover:bg-slate-50 px-6 sm:px-8 py-3 rounded-xl transition-all duration-300 w-full sm:w-auto\",\n                                            children: \"Previous\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                            lineNumber: 1997,\n                                            columnNumber: 19\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                        lineNumber: 1995,\n                                        columnNumber: 15\n                                    }, this),\n                                    currentStep < 5 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"relative w-full sm:w-auto\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_3__.Button, {\n                                                onClick: nextStep,\n                                                disabled: isNextButtonDisabled(),\n                                                className: \"px-6 sm:px-8 py-3 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 w-full sm:w-auto \".concat(isNextButtonDisabled() ? \"bg-gray-400 cursor-not-allowed\" : \"bg-[#27aae1] hover:bg-[#1e8bc3] text-white\"),\n                                                title: isNextButtonDisabled() ? currentStep === 1 ? \"Please select a quote mode to continue\" : currentStep === 2 && quoteMode === \"existing\" ? \"Please select a specific quote to edit\" : currentStep === 3 && quoteMode === \"existing\" && !selectedQuoteId ? \"Please select a specific quote to edit first\" : currentStep === 3 ? \"Please select at least one paper for your products\" : \"Please complete the required information to continue\" : \"Click to proceed to the next step\",\n                                                children: \"Next\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                lineNumber: 2008,\n                                                columnNumber: 19\n                                            }, this),\n                                            isNextButtonDisabled() && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-800 text-white text-sm rounded-lg shadow-lg whitespace-nowrap z-10\",\n                                                children: [\n                                                    currentStep === 1 ? \"Select a quote mode first\" : currentStep === 2 && quoteMode === \"existing\" ? \"Select a specific quote to edit first\" : currentStep === 3 && quoteMode === \"existing\" && !selectedQuoteId ? \"Select a specific quote to edit first\" : currentStep === 3 ? \"Select at least one paper first\" : \"Complete required fields first\",\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        className: \"absolute top-full left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-800\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                        lineNumber: 2044,\n                                                        columnNumber: 23\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                lineNumber: 2033,\n                                                columnNumber: 21\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                        lineNumber: 2007,\n                                        columnNumber: 17\n                                    }, this),\n                                    currentStep === 5 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_3__.Button, {\n                                        onClick: ()=>handleSaveQuote(false),\n                                        disabled: isSaving,\n                                        className: \"bg-[#27aae1] hover:bg-[#1e8bc3] text-white px-6 sm:px-8 py-3 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 w-full sm:w-auto\",\n                                        children: isSaving ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                    lineNumber: 2058,\n                                                    columnNumber: 23\n                                                }, this),\n                                                \"Submitting...\"\n                                            ]\n                                        }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Copy_FileText_Plus_Save_Sparkles_lucide_react__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n                                                    className: \"w-5 h-5 mr-2\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                    lineNumber: 2063,\n                                                    columnNumber: 23\n                                                }, this),\n                                                \"Submit Quote\"\n                                            ]\n                                        }, void 0, true)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                        lineNumber: 2051,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                lineNumber: 1994,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                        lineNumber: 1923,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                    lineNumber: 1922,\n                    columnNumber: 9\n                }, this),\n                saveModalOpen && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bg-white rounded-2xl p-6 sm:p-8 w-full max-w-md text-center shadow-2xl\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                className: \"text-xl sm:text-2xl font-bold text-slate-900 mb-3\",\n                                children: \"Quote Submitted Successfully!\"\n                            }, void 0, false, {\n                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                lineNumber: 2076,\n                                columnNumber: 15\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"text-slate-600 mb-6 text-sm sm:text-base\",\n                                children: requiresApproval ? \"Your quote has been submitted for management approval and will appear in the Quote Management page once approved.\" : \"Your quote has been submitted and will appear in the Quote Management page.\"\n                            }, void 0, false, {\n                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                lineNumber: 2079,\n                                columnNumber: 15\n                            }, this),\n                            requiresApproval && approvalReason && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"mb-6 p-4 bg-orange-50 border border-orange-200 rounded-xl\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex items-center space-x-2 mb-2\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"w-5 h-5 bg-orange-500 rounded-full flex items-center justify-center\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"text-white text-xs font-bold\",\n                                                    children: \"!\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                    lineNumber: 2090,\n                                                    columnNumber: 23\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                lineNumber: 2089,\n                                                columnNumber: 21\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                className: \"font-semibold text-orange-800\",\n                                                children: \"Approval Required\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                lineNumber: 2092,\n                                                columnNumber: 21\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                        lineNumber: 2088,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-orange-700 text-sm\",\n                                        children: approvalReason\n                                    }, void 0, false, {\n                                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                        lineNumber: 2094,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-orange-600 text-xs mt-2\",\n                                        children: \"Management will be notified automatically. You'll receive an update once approved.\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                        lineNumber: 2095,\n                                        columnNumber: 19\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                lineNumber: 2087,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"space-y-4\",\n                                children: [\n                                    !requiresApproval && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_3__.Button, {\n                                                className: \"w-full bg-[#ea078b] hover:bg-[#d4067a] text-white py-3 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_4___default()), {\n                                                    href: \"mailto:\".concat(formData.client.email),\n                                                    children: \"Send to Customer\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                    lineNumber: 2105,\n                                                    columnNumber: 23\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                lineNumber: 2104,\n                                                columnNumber: 21\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_3__.Button, {\n                                                className: \"w-full bg-[#f89d1d] hover:bg-[#e88a0a] text-white py-3 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300\",\n                                                onClick: handleDownloadCustomerFromModal,\n                                                children: \"Download for Customer\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                                lineNumber: 2109,\n                                                columnNumber: 21\n                                            }, this)\n                                        ]\n                                    }, void 0, true),\n                                    !requiresApproval && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_3__.Button, {\n                                        className: \"w-full bg-[#27aae1] hover:bg-[#1e8bc3] text-white py-3 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300\",\n                                        onClick: handleDownloadOpsFromModal,\n                                        children: \"Download Operations Copy\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                        lineNumber: 2120,\n                                        columnNumber: 19\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_3__.Button, {\n                                        variant: \"outline\",\n                                        onClick: ()=>{\n                                            setSaveModalOpen(false);\n                                            router.push(\"/\");\n                                        },\n                                        className: \"w-full py-3 rounded-xl border-slate-300 hover:border-slate-400 hover:bg-slate-400 transition-all duration-300\",\n                                        children: \"Close & Go to Dashboard\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                        lineNumber: 2128,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                                lineNumber: 2101,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                        lineNumber: 2075,\n                        columnNumber: 13\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                    lineNumber: 2074,\n                    columnNumber: 11\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n            lineNumber: 1920,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n        lineNumber: 1919,\n        columnNumber: 5\n    }, this);\n}\n_s(CreateQuoteContent, \"PLR8gEBq8a8m58a+Fg/2Qcv23+g=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_5__.useRouter,\n        next_navigation__WEBPACK_IMPORTED_MODULE_5__.useSearchParams\n    ];\n});\n_c = CreateQuoteContent;\n// Main component with Suspense boundary\nfunction CreateQuotePage() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense, {\n        fallback: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex items-center justify-center min-h-screen\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"animate-spin rounded-full h-32 w-32 border-b-2 border-[#27aae1] mx-auto\"\n                    }, void 0, false, {\n                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                        lineNumber: 2153,\n                        columnNumber: 11\n                    }, void 0),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"mt-4 text-lg text-slate-600\",\n                        children: \"Loading quote creation...\"\n                    }, void 0, false, {\n                        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                        lineNumber: 2154,\n                        columnNumber: 11\n                    }, void 0)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n                lineNumber: 2152,\n                columnNumber: 9\n            }, void 0)\n        }, void 0, false, {\n            fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n            lineNumber: 2151,\n            columnNumber: 7\n        }, void 0),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CreateQuoteContent, {}, void 0, false, {\n            fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n            lineNumber: 2158,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/Alifka_Roosseo/Desktop/Project/Smart-printing-update/app/(root)/create-quote/page.tsx\",\n        lineNumber: 2150,\n        columnNumber: 5\n    }, this);\n}\n_c1 = CreateQuotePage;\nvar _c, _c1;\n$RefreshReg$(_c, \"CreateQuoteContent\");\n$RefreshReg$(_c1, \"CreateQuotePage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/(root)/create-quote/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/create-quote/steps/Step4Operational.tsx":
/*!************************************************************!*\
  !*** ./components/create-quote/steps/Step4Operational.tsx ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



;
    // Wrapped in an IIFE to avoid polluting the global scope
    ;
    (function () {
        var _a, _b;
        // Legacy CSS implementations will `eval` browser code in a Node.js context
        // to extract CSS. For backwards compatibility, we need to check we're in a
        // browser context before continuing.
        if (typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self) {
            // @ts-ignore __webpack_module__ is global
            var currentExports = module.exports;
            // @ts-ignore __webpack_module__ is global
            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
                // Save the previous exports signature on update so we can compare the boundary
                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)
                module.hot.dispose(function (data) {
                    data.prevSignature =
                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);
                });
                // Unconditionally accept an update to this module, we'll check if it's
                // still a Refresh Boundary later.
                // @ts-ignore importMeta is replaced in the loader
                module.hot.accept();
                // This field is set when the previous version of this module was a
                // Refresh Boundary, letting us know we need to check for invalidation or
                // enqueue an update.
                if (prevSignature !== null) {
                    // A boundary can become ineligible if its exports are incompatible
                    // with the previous exports.
                    //
                    // For example, if you add/remove/change exports, we'll want to
                    // re-execute the importing modules, and force those components to
                    // re-render. Similarly, if you convert a class component to a
                    // function, we want to invalidate the boundary.
                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {
                        module.hot.invalidate();
                    }
                    else {
                        self.$RefreshHelpers$.scheduleUpdate();
                    }
                }
            }
            else {
                // Since we just executed the code for the module, it's possible that the
                // new exports made it ineligible for being a boundary.
                // We only care about the case when we were _previously_ a boundary,
                // because we already accepted this update (accidental side effect).
                var isNoLongerABoundary = prevSignature !== null;
                if (isNoLongerABoundary) {
                    module.hot.invalidate();
                }
            }
        }
    })();


/***/ })

});