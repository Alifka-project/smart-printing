"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(root)/create-quote/page",{

/***/ "(app-pages-browser)/./lib/dynamic-press-calculator.ts":
/*!*****************************************!*\
  !*** ./lib/dynamic-press-calculator.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CUTTING_CONSTRAINTS: () => (/* binding */ DEFAULT_CUTTING_CONSTRAINTS),\n/* harmony export */   calculateOptimalPressDimensions: () => (/* binding */ calculateOptimalPressDimensions),\n/* harmony export */   calculateVisualizationPressDimensions: () => (/* binding */ calculateVisualizationPressDimensions),\n/* harmony export */   getBestPressDimension: () => (/* binding */ getBestPressDimension),\n/* harmony export */   validatePressCalculations: () => (/* binding */ validatePressCalculations)\n/* harmony export */ });\n// Define Cm type locally since types module might not be available\n// === Dynamic Press Dimension Calculator ===\n// This module calculates optimal press dimensions based on product size\n// Following the Excel sheet logic for cutting operations\n// Units-table VLOOKUP (cumulative) in closed form - same as Excel\nconst unitPrice = (units)=>{\n    const u = Math.max(0, Math.floor(units));\n    if (u <= 10) return 50 * u;\n    if (u <= 20) return 60 * u - u * u; // 60u - u^2\n    return 40 * u;\n};\n// Default cutting constraints based on Excel analysis\nconst DEFAULT_CUTTING_CONSTRAINTS = {\n    parentWidth: 100,\n    parentHeight: 70,\n    minPressWidth: 20,\n    minPressHeight: 15,\n    maxPressWidth: 100,\n    maxPressHeight: 70,\n    cuttingMargin: 1.0,\n    gapBetweenPieces: 0.5 // 0.5cm gap between pieces\n};\n/**\n * Calculate optimal press dimensions based on product size\n * Following Excel sheet logic: press dimensions should maximize cutting efficiency\n */ function calculateOptimalPressDimensions(productDimensions) {\n    let constraints = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : DEFAULT_CUTTING_CONSTRAINTS;\n    const { width: productWidth, height: productHeight } = productDimensions;\n    const { parentWidth, parentHeight, minPressWidth, minPressHeight, maxPressWidth, maxPressHeight, cuttingMargin, gapBetweenPieces } = constraints;\n    console.log('üîç Calculating optimal press dimensions for product:', productDimensions);\n    console.log('üìè Using constraints:', constraints);\n    const pressOptions = [];\n    // Calculate all possible press dimensions that fit within parent sheet\n    // with reasonable cutting margins\n    const stepSize = 5; // 5cm increments for press dimensions\n    for(let pressWidth = minPressWidth; pressWidth <= maxPressWidth; pressWidth += stepSize){\n        for(let pressHeight = minPressHeight; pressHeight <= maxPressHeight; pressHeight += stepSize){\n            // Check if press fits within parent sheet with margins\n            if (pressWidth + cuttingMargin <= parentWidth && pressHeight + cuttingMargin <= parentHeight) {\n                // Calculate how many pieces fit on this press sheet\n                const piecesPerPress = calculatePiecesPerPress(pressWidth, pressHeight, productWidth, productHeight, gapBetweenPieces);\n                // Calculate how many press sheets fit in parent sheet\n                const pressSheetsPerParent = calculatePressSheetsPerParent(parentWidth, parentHeight, pressWidth, pressHeight);\n                // Calculate total pieces per parent sheet\n                const piecesPerParent = piecesPerPress * pressSheetsPerParent;\n                // Calculate efficiency (percentage of parent sheet utilized)\n                const efficiency = piecesPerParent * productWidth * productHeight / (parentWidth * parentHeight) * 100;\n                if (piecesPerPress > 0 && pressSheetsPerParent > 0) {\n                    pressOptions.push({\n                        width: pressWidth,\n                        height: pressHeight,\n                        label: \"\".concat(pressWidth, \"\\xd7\").concat(pressHeight, \" cm\"),\n                        efficiency: Math.round(efficiency * 100) / 100,\n                        piecesPerPress,\n                        piecesPerParent\n                    });\n                }\n            }\n        }\n    }\n    // Sort by efficiency (highest first)\n    pressOptions.sort((a, b)=>b.efficiency - a.efficiency);\n    console.log('üìä Generated press options:', pressOptions.slice(0, 5)); // Log top 5 options\n    return pressOptions;\n}\n/**\n * Calculate how many product pieces fit on a press sheet\n * Following Excel formula: ROUNDDOWN((Sheet Width) / (width + gap), 0) √ó ROUNDDOWN((Sheet Height) / (height + gap), 0)\n */ function calculatePiecesPerPress(pressWidth, pressHeight, productWidth, productHeight, gap) {\n    // Option 1: Normal orientation\n    const cols1 = Math.floor(pressWidth / (productWidth + gap));\n    const rows1 = Math.floor(pressHeight / (productHeight + gap));\n    const pieces1 = cols1 * rows1;\n    // Option 2: Rotated orientation\n    const cols2 = Math.floor(pressWidth / (productHeight + gap));\n    const rows2 = Math.floor(pressHeight / (productWidth + gap));\n    const pieces2 = cols2 * rows2;\n    // Return the better option (Excel logic: IF(Option 1 > Option 2, Option 1, Option 2))\n    return Math.max(pieces1, pieces2);\n}\n/**\n * Calculate how many press sheets fit in parent sheet\n * Following Excel logic for cutting operations\n */ function calculatePressSheetsPerParent(parentWidth, parentHeight, pressWidth, pressHeight) {\n    // Calculate how many press sheets fit horizontally and vertically\n    const horizontalFit = Math.floor(parentWidth / pressWidth);\n    const verticalFit = Math.floor(parentHeight / pressHeight);\n    return horizontalFit * verticalFit;\n}\n/**\n * Get the best press dimension for a given product\n * Returns the most efficient option\n */ function getBestPressDimension(productDimensions) {\n    let constraints = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : DEFAULT_CUTTING_CONSTRAINTS;\n    const options = calculateOptimalPressDimensions(productDimensions, constraints);\n    return options.length > 0 ? options[0] : null;\n}\n/**\n * Validate press dimensions against Excel examples\n * Test function to ensure calculations match Excel logic\n */ function validatePressCalculations() {\n    console.log('üß™ Validating press calculations against Excel examples...');\n    // Test case: Business card (9√ó5.5) should result in press around 40√ó20\n    const businessCardTest = getBestPressDimension({\n        width: 9,\n        height: 5.5\n    });\n    console.log('üì± Business card test result:', businessCardTest);\n    // Expected: Should be around 40√ó20 with good efficiency\n    const isValid = businessCardTest && businessCardTest.width >= 35 && businessCardTest.width <= 45 && businessCardTest.height >= 15 && businessCardTest.height <= 25;\n    if (isValid) {\n        console.log('‚úÖ Press calculation validation: PASSED');\n    } else {\n        console.warn('‚ö†Ô∏è Press calculation validation: FAILED');\n    }\n    return isValid;\n}\n/**\n * Calculate press dimensions specifically for visualization\n * Returns dimensions that work well for the cutting visualization\n * Uses EXACT SAME logic as Excel calculation (pickCheapestTotal + calcRowTotal)\n */ function calculateVisualizationPressDimensions(productDimensions, formData) {\n    var _formData_products_, _formData_products, _formData_products_1, _formData_products1, _formData_products_2, _formData_products2;\n    // Use product dimensions from form data if available\n    const productWidth = productDimensions.width;\n    const productHeight = productDimensions.height;\n    if (!productWidth || !productHeight) {\n        console.warn('‚ö†Ô∏è Missing product dimensions for press calculation');\n        return null;\n    }\n    console.log('üîç Calculating visualization press dimensions for:', productDimensions);\n    // Use EXACT SAME CUT_SIZE_CANDIDATES as Excel calculation\n    const cutSizeCandidates = [\n        {\n            parentW: 20,\n            parentH: 14,\n            cutPcs: 25,\n            label: \"20√ó14 / Cp25\"\n        },\n        {\n            parentW: 20,\n            parentH: 17.5,\n            cutPcs: 20,\n            label: \"20√ó17.5 / Cp20\"\n        },\n        {\n            parentW: 23,\n            parentH: 14,\n            cutPcs: 21,\n            label: \"23√ó14 / Cp21\"\n        },\n        {\n            parentW: 23,\n            parentH: 16.5,\n            cutPcs: 18,\n            label: \"23√ó16.5 / Cp18\"\n        },\n        {\n            parentW: 23,\n            parentH: 20,\n            cutPcs: 15,\n            label: \"23√ó20 / Cp15\"\n        },\n        {\n            parentW: 25,\n            parentH: 14,\n            cutPcs: 20,\n            label: \"25√ó14 / Cp20\"\n        },\n        {\n            parentW: 25,\n            parentH: 17.5,\n            cutPcs: 16,\n            label: \"25√ó17.5 / Cp16\"\n        },\n        {\n            parentW: 25,\n            parentH: 20,\n            cutPcs: 14,\n            label: \"25√ó20 / Cp14\"\n        },\n        {\n            parentW: 25,\n            parentH: 23,\n            cutPcs: 12,\n            label: \"25√ó23 / Cp12\"\n        },\n        {\n            parentW: 28,\n            parentH: 14,\n            cutPcs: 17,\n            label: \"28√ó14 / Cp17\"\n        },\n        {\n            parentW: 30,\n            parentH: 14,\n            cutPcs: 16,\n            label: \"30√ó14 / Cp16\"\n        },\n        {\n            parentW: 30,\n            parentH: 17.5,\n            cutPcs: 13,\n            label: \"30√ó17.5 / Cp13\"\n        },\n        {\n            parentW: 30,\n            parentH: 20,\n            cutPcs: 11,\n            label: \"30√ó20 / Cp11\"\n        },\n        {\n            parentW: 30,\n            parentH: 23,\n            cutPcs: 9,\n            label: \"30√ó23 / Cp9\"\n        },\n        {\n            parentW: 35,\n            parentH: 14,\n            cutPcs: 14,\n            label: \"35√ó14 / Cp14\"\n        },\n        {\n            parentW: 35,\n            parentH: 17.5,\n            cutPcs: 11,\n            label: \"35√ó17.5 / Cp11\"\n        },\n        {\n            parentW: 35,\n            parentH: 20,\n            cutPcs: 10,\n            label: \"35√ó20 / Cp10\"\n        },\n        {\n            parentW: 35,\n            parentH: 23,\n            cutPcs: 8,\n            label: \"35√ó23 / Cp8\"\n        },\n        {\n            parentW: 35,\n            parentH: 25,\n            cutPcs: 7,\n            label: \"35√ó25 / Cp7\"\n        },\n        {\n            parentW: 40,\n            parentH: 14,\n            cutPcs: 12,\n            label: \"40√ó14 / Cp12\"\n        },\n        {\n            parentW: 40,\n            parentH: 17.5,\n            cutPcs: 10,\n            label: \"40√ó17.5 / Cp10\"\n        },\n        {\n            parentW: 40,\n            parentH: 20,\n            cutPcs: 8,\n            label: \"40√ó20 / Cp8\"\n        },\n        {\n            parentW: 40,\n            parentH: 23,\n            cutPcs: 7,\n            label: \"40√ó23 / Cp7\"\n        },\n        {\n            parentW: 40,\n            parentH: 25,\n            cutPcs: 6,\n            label: \"40√ó25 / Cp6\"\n        },\n        {\n            parentW: 40,\n            parentH: 30,\n            cutPcs: 5,\n            label: \"40√ó30 / Cp5\"\n        },\n        {\n            parentW: 40,\n            parentH: 35,\n            cutPcs: 4,\n            label: \"40√ó35 / Cp4\"\n        },\n        {\n            parentW: 45,\n            parentH: 20,\n            cutPcs: 7,\n            label: \"45√ó20 / Cp7\"\n        },\n        {\n            parentW: 45,\n            parentH: 25,\n            cutPcs: 5,\n            label: \"45√ó25 / Cp5\"\n        },\n        {\n            parentW: 45,\n            parentH: 30,\n            cutPcs: 4,\n            label: \"45√ó30 / Cp4\"\n        },\n        {\n            parentW: 45,\n            parentH: 35,\n            cutPcs: 3,\n            label: \"45√ó35 / Cp3\"\n        },\n        {\n            parentW: 50,\n            parentH: 20,\n            cutPcs: 6,\n            label: \"50√ó20 / Cp6\"\n        },\n        {\n            parentW: 50,\n            parentH: 25,\n            cutPcs: 5,\n            label: \"50√ó25 / Cp5\"\n        },\n        {\n            parentW: 50,\n            parentH: 30,\n            cutPcs: 4,\n            label: \"50√ó30 / Cp4\"\n        },\n        {\n            parentW: 50,\n            parentH: 35,\n            cutPcs: 4,\n            label: \"50√ó35 / Cp4\"\n        }\n    ];\n    // Use EXACT SAME logic as Excel calculation\n    // Get form data values for accurate calculation\n    const sides = (formData === null || formData === void 0 ? void 0 : (_formData_products = formData.products) === null || _formData_products === void 0 ? void 0 : (_formData_products_ = _formData_products[0]) === null || _formData_products_ === void 0 ? void 0 : _formData_products_.sides) === \"1\" ? 1 : 2;\n    const colours = (formData === null || formData === void 0 ? void 0 : (_formData_products1 = formData.products) === null || _formData_products1 === void 0 ? void 0 : (_formData_products_1 = _formData_products1[0]) === null || _formData_products_1 === void 0 ? void 0 : _formData_products_1.colours) || 4;\n    const qty = (formData === null || formData === void 0 ? void 0 : (_formData_products2 = formData.products) === null || _formData_products2 === void 0 ? void 0 : (_formData_products_2 = _formData_products2[0]) === null || _formData_products_2 === void 0 ? void 0 : _formData_products_2.quantity) || 1000;\n    const paperCostPerSheet = 1; // Standard paper cost for visualization\n    // Create base object for calcRowTotal\n    const base = {\n        pieceW: productWidth,\n        pieceH: productHeight,\n        qty: qty,\n        sides: sides,\n        colours: colours,\n        paperCostPerSheet: paperCostPerSheet\n    };\n    // Use EXACT SAME pickCheapestTotal logic\n    const rows = cutSizeCandidates.map((candidate)=>calcRowTotal(base, candidate));\n    rows.sort((a, b)=>a.total - b.total);\n    const cheapestRow = rows[0]; // cheapest row\n    if (cheapestRow) {\n        console.log('üéØ Best cutting size found (Excel logic):', cheapestRow);\n        // Calculate efficiency percentage\n        const efficiency = cheapestRow.upsPerSht * productWidth * productHeight / (cheapestRow.parentW * cheapestRow.parentH) * 100;\n        return {\n            width: cheapestRow.parentW,\n            height: cheapestRow.parentH,\n            label: cheapestRow.label || \"\".concat(cheapestRow.parentW, \"\\xd7\").concat(cheapestRow.parentH, \" cm\"),\n            efficiency: Math.round(efficiency * 100) / 100,\n            piecesPerPress: cheapestRow.noOfUps,\n            piecesPerParent: cheapestRow.cutPcs\n        };\n    }\n    // Fallback: use parent sheet size for very large products\n    console.log('‚ö†Ô∏è No optimal cutting size found, using parent sheet size');\n    return {\n        width: 100,\n        height: 70,\n        label: \"100√ó70 cm (Parent Sheet)\",\n        efficiency: 100,\n        piecesPerPress: 1,\n        piecesPerParent: 1\n    };\n}\n/**\n * EXACT COPY of calcRowTotal from Step4Operational.tsx\n * This ensures the visualization uses the same calculation logic\n */ function calcRowTotal(base, row) {\n    const { pieceW, pieceH, qty, sides, colours, paperCostPerSheet } = base;\n    const { parentW, parentH, cutPcs } = row;\n    // 1) Imposition (Option1/2)\n    const opt1 = Math.floor(parentW / (pieceH + 1)) * Math.floor(parentH / (pieceW + 1));\n    const opt2 = Math.floor(parentW / (pieceW + 1)) * Math.floor(parentH / (pieceH + 1));\n    const noOfUps = Math.max(opt1, opt2);\n    // 2) Odd/even rule (IF(Sides=1, TRUE, ISEVEN(No. of ups)))\n    const oddEven = sides === 1 ? true : noOfUps % 2 === 0;\n    // 3) Ups/sheet; 4) Waste; 5) Sheets\n    const upsPerSht = noOfUps * cutPcs;\n    const wasteSheets = Math.ceil((parentW > 50 ? 120 : 100) / cutPcs);\n    const sheets = upsPerSht === 0 ? 0 : Math.ceil(qty / upsPerSht + wasteSheets);\n    // 6) Paper cost\n    const paperCost = sheets * paperCostPerSheet;\n    // 7) Units ‚Üí 8) unit price\n    const coreUnits = Math.ceil(sheets * cutPcs * colours * sides / 1000);\n    const baseUnits = Math.max(colours, coreUnits);\n    const units = oddEven ? baseUnits : baseUnits * 2;\n    const unit_price = unitPrice(units);\n    // 9) Plate\n    const platePerSide = (parentW > 54 ? 50 : 20) * colours;\n    const plateTotal = platePerSide * sides;\n    // 10) Total\n    const total = sheets === 0 ? 0 : unit_price + paperCost + plateTotal;\n    return {\n        ...row,\n        noOfUps,\n        upsPerSht,\n        wasteSheets,\n        sheets,\n        paperCost,\n        units,\n        unit_price,\n        platePerSide,\n        plateTotal,\n        total\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/dynamic-press-calculator.ts\n"));

/***/ })

});