import { NextRequest, NextResponse } from 'next/server';
import { DatabaseService } from '@/lib/database-unified';

export async function GET() {
  try {
    console.log('üîç Fetching sales persons from database...');
    
    const dbService = new DatabaseService();
    const salesPersons = await dbService.getAllSalesPersons();
    
    console.log(`‚úÖ Found ${salesPersons.length} sales persons`);
    
    return NextResponse.json(salesPersons);
    
  } catch (error) {
    console.error('‚ùå Error fetching sales persons:', error);
    return NextResponse.json(
      { error: 'Failed to fetch sales persons', details: error.message },
      { status: 500 }
    );
  }
}

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    console.log('Received sales person data:', JSON.stringify(body, null, 2));
    
    // Validate required fields - remove salesPersonId from required fields since it's auto-generated
    const requiredFields = ['name', 'email', 'phone'];
    for (const field of requiredFields) {
      if (!body[field]) {
        console.log(`Missing required field: ${field}`);
        return NextResponse.json(
          { error: `Missing required field: ${field}` },
          { status: 400 }
        );
      }
    }
    
    // Generate salesPersonId if not provided
    if (!body.salesPersonId) {
      // This will be generated by the database service
      console.log('No salesPersonId provided, will be auto-generated');
    }
    
    // Create sales person using DatabaseService
    const dbService = new DatabaseService();
    const salesPerson = await dbService.createSalesPerson(body);
    
    console.log('Sales person created successfully:', salesPerson.id);
    return NextResponse.json(salesPerson);
    
  } catch (error) {
    console.error('‚ùå Error creating sales person:', error);
    return NextResponse.json(
      { error: 'Failed to create sales person', details: error.message },
      { status: 500 }
    );
  }
}
